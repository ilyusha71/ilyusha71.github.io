[{"content":"注意！以下內容均在Win 10環境下操作，其他作業系統的操作方式並不相同。\n安裝Chocolatey Chocolatey是Windows下的軟件管理器，很多軟件都能直接安裝。\n在Win 10安裝Chocolatey有兩種方式：\n使用Powershell安裝 在Win 10左下角的搜尋輸入powershell就能找到Windows PowerShell。\n記得以系統管理員身份執行。\n1  Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(\u0026#39;https://chocolatey.org/install.ps1\u0026#39;))\r  使用命令提示字元 / 命令提示符 在Win 10左下角的搜尋輸入cmd打開命令提示字元。\n記得以系統管理員身份執行。\n1  @\u0026#34;%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\u0026#34; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \u0026#34;iex ((New-Object System.Net.WebClient).DownloadString(\u0026#39;https://chocolatey.org/install.ps1\u0026#39;))\u0026#34; \u0026amp;\u0026amp; SET \u0026#34;PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\u0026#34;\r  安裝Git與Hugo 安裝完Chocolatey之後，接下來的安裝就很方便，直接重新開啟PowerShell，輸入：\n1  choco install git.install\r  1  choco install hugo\r  有些較為複雜的Hugo主題會使用Sass/SCSS，此時必須要再安裝Hugo的擴展。\n1  choco install hugo-extended\r  Hugo建立網站 通過cd指令到你要建站的目錄，然後輸入：\n1  hugo new site \u0026lt;你的網站名稱\u0026gt;\r  安裝主題 進到網站根目錄，在Hugo Theme挑選喜歡的主題，不同主題安裝方法略有差異。\n基本設置如下：\n1 2  git init\rgit submodule add \u0026lt;主題網址.git\u0026gt; themes/\u0026lt;主題名稱\u0026gt;\r  主題設置與測試 關於設置主題的部分，每個主題都有自己的一套配置方法，詳見各主題的網站與github。以下為大多數主題的基本設置：\n 進入theme/主題資料夾/exampleSite（不是所有主題都有exampleSite這個資料夾） 在exampleSite找到config.toml複製一份至根目錄。 為方便測試，可以把content資料夾也複製到根目錄。  進階設置 部分主題需要到theme/主題資料夾複製Static與Layout的內容或整個資料夾至根目錄才能正常顯示。\n測試 透過下面的指令會啟動本地端的網站，在網址列輸入localhost:1313/即可預覽。\n1  hugo server\r  網站發佈到Github 網站發佈 透過指令下面的指令會生成一個public的資料夾，這個資料夾就是要發佈到Github的內容。\n1  hugo\r  網站發佈前要先把config.toml的baseURL與manifest.json的start_url換成Github使用的網址，確保網站的各項參數能關聯到正確的地址。\nPush到Github 先移動到public資料夾，輸入指令：\n1 2 3 4  git init\rgit add .\rgit commit -m \u0026#34;init\u0026#34;\rgit push origin master\r  ","description":"速成架站與經驗整理","id":2,"section":"posts","tags":["hugo"],"title":"在Windows使用Hugo在Github架設網站","uri":"https://ilyusha71.github.io/posts/github-hugo-website/"},{"content":"角色卡品質 角色卡存在兩種品質，グレード（Grade）與レベル（Level）：\nグレード，以下稱作等，分為S、A、B、C四等。\nレベル，以下稱作級，在【等】之下分為Lv1至Lv10十級。\n角色卡提升品質 角色卡可以透過收集其他同角色的卡片進行品質的提升。\n グレードアップ，以下稱作升等。 レベルアップ，以下稱作升級。  升等條件  角色卡要進行升等必須先升級到Lv10。  升等花費 \r\rダイヤ，哆啦A夢公園的氪金通貨\n以下稱作鑽石。\r\r\r 角色卡升等的花費只與角色卡的等有關。  C等卡升等為B等卡，需要花費2顆鑽石。    升級條件  角色卡升級僅需要任何一張相同角色的卡片即可進行升級。 角色卡升級消耗的角色卡，以下稱作材料卡。  升級花費 \r\rドラやきメダル，哆啦A夢公園的主要通貨\n以下稱作銅鑼燒獎章。\r\r\r 角色卡升級的花費只與角色卡的等有關。  C等卡升級每消耗一張材料卡需要花費5枚銅鑼燒獎章。 B等卡升級每消耗一張材料卡需要花費15枚銅鑼燒獎章。 A等卡升級每消耗一張材料卡需要花費30枚銅鑼燒獎章。    升級經驗  角色卡升級的經驗只與材料卡的等有關。 角色卡使用同等的材料卡升級，每一張提升1級。 角色卡使用不同等的材料卡升級，提升等級如下：  C等卡使用B等卡升級，每一張提升9級，兩張滿級。 C等卡使用A等卡升級，每一張提升10級，一張滿級。 B等卡使用C等卡升級，每一張提升12.5%，八張升一級。 B等卡使用A等卡升級，每一張提升7級，兩張滿級。 A等卡使用C等卡升級，每一張提升1%。    所以直接使用低等的材料卡升級，要比將低等卡升等後再升級更划算。\n","description":"角色卡的升級筆記","id":3,"section":"posts","tags":null,"title":"哆啦A夢公園角色卡品質資訊","uri":"https://ilyusha71.github.io/posts/doraemon-park-upgrade/"},{"content":"開發前 本次的項目是在兒童樂園I店建置大型迷宮密室，內部由大量隔間組成，每道門都配有RFID射頻識別門鎖。在遊戲設計初期（2020年1月）考慮納入計時功能來限制玩家在各關卡的挑戰時間，但尚未實際討論過實作的問題。2月中開發清單增加了DS3231時鐘模組（之後會補充記錄這部分的開發問題）來處理計時的功能，DS3231使用I2C傳輸可以提供多個Arduino在時間記錄上的參考，但隨之而來的問題是I店場域很大，I2C無法提供長距離的穩定通訊，在研究了RS232、RS485、CAN等有線長距離傳輸的姿勢後，在龐大的佈線壓力下（還有就是場域要連網的設備基數太多），還是決定使用無線通訊，早期也曾考慮過使用但是當時公司只有大量的便宜貨FS1000A與 MX-RM-5V，這個在前年曾經使用過，但傳輸距離頂多2米，超過2米之後傳輸的速率大幅下降，而且組成是一對發射器與接收器，顯然會大量增加連接的裝置。最終決定使用本文的主角HC12遠距無線通訊模組！\n開發學習 簡單研究了HC12的使用與FS1000A，除了HC12收發一體之外，代碼在讀寫控制上並無太多區別，而相比I2C的通訊需要區分主從設備並在發送與接收的過程需要對答來看，HC12顯然要方便許多。\nHC12的基本設置 靚照 配線 配線的基本原則：\n HC12 VCC \u0026mdash; 5V Arduino HC12 GND \u0026mdash; GND Arduino HC12 RX  \u0026mdash; TX  Arduino HC12 TX  \u0026mdash; RX Arduino\n在本次的開發項目中，大多數的設備第10~13腳已經被RFID的SPI介面使用了，第5~7腳則作為蜂鳴器與繼電器的輸出，所以HC12對接的RX（接收）TX（傳送）設定為第2與第3腳，以下是代碼中的設定，使用HC12必須引入SoftwareSerial庫。\n1 2  #include \u0026lt;SoftwareSerial.h\u0026gt;\rSoftwareSerial HC12(2, 3); // HC-12 TX Pin, HC-12 RX Pin   \n參考了網上資料，在HC12的電源正負端最好配上22µF至1mF的去耦電容，而在電源正極之前串聯一顆1N4007二極體。  安裝 測試 基本上兩塊Arduino各自配置HC12後就可以使用下面的代碼進行雙向傳輸\n1 2 3 4 5 6 7 8  void loop() {\rwhile (HC12.available()) { // If HC-12 has data\r Serial.write(HC12.read()); // Send the data to Serial monitor\r }\rwhile (Serial.available()) { // If Serial monitor has data\r HC12.write(Serial.read()); // Send that data to HC-12\r }\r}  \n參考來源 基于Arduino开发板使用HC-12远程无线通信模块\n","description":"第一天使用HC12就上手","id":4,"section":"posts","tags":["Arduino","HC12","無線通訊"],"title":"HC12遠距無線通訊模組開發記錄 Part.1","uri":"https://ilyusha71.github.io/posts/hc12-development/"},{"content":"關注 銅鑼燒實驗牧場\n伊琉沙/ PC實測/哆啦A夢牧場物語\n關於好感度的計算，我從源代碼反編譯找到了。\n結果跟之前自己實機測試結果一致。\n只是程式碼的所有數值計算比我的推測精確5倍！！！\n好感度的獲取方式與對應積分  打招呼 (GREET)  +5分   對話 (TALK)  +25分   送禮物 (PRESENT)  +5分   送喜好的禮物（會冒出3♥） (GOOD_PRESENT)  +25分   送最愛的禮物（會冒出5♥） (FAVORITE_PRESENT)  +60分   送討厭的禮物 (BAD_PRESENT)  -10分   參與慶典 (PARTICIPATE_FESTIVAL)  +10分    好感度積分 再來是好感度的基本分，從源代碼發現人物角色與野生動物的好感度標準分是不同的，這也是為什麼野生動物的好感度比較容易上升。\n人物角色  1♥  0分   2♥  100分   3♥  400分   4♥  900分   5♥  1700分   6♥  2800分   7♥  4200分   8♥  5900分   9♥  7900分   10♥  10000分    野生動物  1♥  0分   2♥  100分   3♥  200分   4♥  400分   5♥  700分   6♥  1100分   7♥  1700分   8♥  2600分   9♥  3800分   10♥  5000分    ","description":"好感度的累積方法以及各等級好感度的所需積分","id":5,"section":"posts","tags":null,"title":"哆啦A夢牧場物語的好感度積分","uri":"https://ilyusha71.github.io/posts/doraemon-story-likabilitydegree/"},{"content":"選擇合適的字體 Step 1 前往Goole Fonts網站 Goole Fonts\nStep 2 選擇語言 中文的部分除了繁體與簡體之外還有支援香港字形。\n按照習慣選擇 Chinese (Traditional)。\nStep 3 選擇字體 目前繁體字體只提供下列兩種字體：\n Noto Sans TC（思源黑體） Noto Serif TC（思源宋體）\n進入字體頁面可以輸入內容看看預覽效果，調整大小與粗細。  Step 4 產生樣式 調整完成點選網站右上角的 SELECT THIS FONT，會在右下角跳出樣式窗口，在此窗口還可以在 CUSTOMIZE 進一步設置樣式支援的粗細與語系。\n設定Google Fonts 標準設置 在 STANDARD 應該會出現類似下面代碼的樣式：\n1  \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css?family=Noto+Sans+TC\u0026amp;display=swap\u0026amp;subset=chinese-traditional\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt;  \n將這段代碼複製到網站的 [head] 與 [/head] 之間。\n@import設置 切換 @import會出現：\n1  @import url(\u0026#39;https://fonts.googleapis.com/css?family=Noto+Sans+TC\u0026amp;display=swap\u0026amp;subset=chinese-traditional\u0026#39;);  \n將 @import 這段放入 [style] 與 [/style] 之間。\nzzo主題設置 在zzo主題設置上僅需要兩個步驟，此處以 Noto Sans TC 為例：\n修改 font.toml 在 root/data/font.toml 這個位置找到 font.toml ，修改預設字體內容：\n1 2  title_font = \u0026#34;\\\u0026#34;Noto Sans TC\\\u0026#34;, sans-serif\u0026#34;\rcontent_font = \u0026#34;\\\u0026#34;Noto Sans TC\\\u0026#34;, serif\u0026#34;  \n添加修改head 在 root/layouts/partials/head/custom-head.html 這個位置找到 custom-head.htm ，加載下列樣式。\n1  \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css?family=Noto+Sans+TC\u0026amp;display=swap\u0026amp;subset=chinese-traditional\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt;  \n","description":"Google Fonts雲端字體的設定與使用","id":7,"section":"posts","tags":["font"],"title":"在網站中使用Google Fonts","uri":"https://ilyusha71.github.io/posts/google-font-setting/"},{"content":"Markdownify box This is boxmd shortcode Simple box This is **box** shortcode\r Code tabs Make it easy to switch between different code\njava\rjavascript\r\r1  System.out.println(\u0026#39;Hello World!\u0026#39;);\r  \r\r1  console.log(\u0026#39;Hello World!\u0026#39;);\r  \r\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"c3a7395d19726e47\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar codetabLinks = null;\rvar codetabContents = null;\rvar ids = [];\rif (containerElem) {\rcodetabLinks = containerElem.querySelectorAll('.codetab__link');\rcodetabContents = containerElem.querySelectorAll('.codetab__content');\r}\rfor (var i = 0; i 0) {\rcodetabContents[0].style.display = 'block';\r}\r Tabs for general purpose Windows\rMacOS\rUbuntu\r\rWindows section 1  console.log(\u0026#39;Hello World!\u0026#39;);\r  ⚠️Becareful that the content in the tab should be different from each other. The tab makes unique id hashes depending on the tab contents. So, If you just copy-paste the tabs with multiple times, since it has the same contents, the tab will not work.\n\rMacOS section Hello world!\r\rUbuntu section Great!\r\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"5c92b60c8ec7870a\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar tabLinks = null;\rvar tabContents = null;\rvar ids = [];\rif (containerElem) {\rtabLinks = containerElem.querySelectorAll('.tab__link');\rtabContents = containerElem.querySelectorAll('.tab__content');\r}\rfor (var i = 0; i 0) {\rtabContents[0].style.display = 'block';\r}\r Expand \r\rExpand me\r\rTitle contents\r\r \r\rExpand me2\r\rTitle2 contents2\r\r Alert Colored box\nthis is a text\rthis is a text\rthis is a text\rthis is a text\rNotice success text\r info text\r warning text\r error text\r ","description":"tabs, code-tabs, expand, alert, warning, notice, img, box","id":8,"section":"posts","tags":["shortcode"],"title":"Shortcodes","uri":"https://ilyusha71.github.io/posts/shortcodes/"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn: Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","description":"Sample article showcasing basic Markdown syntax and formatting for HTML elements.","id":9,"section":"posts","tags":["markdown","css","html","themes"],"title":"Markdown Syntax Guide","uri":"https://ilyusha71.github.io/posts/markdown-syntax/"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nInstagram Simple Shortcode .__h_instagram.card { font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; font-size: 14px; border: 1px solid rgb(219, 219, 219); padding: 0; margin-top: 30px; } .__h_instagram.card .card-header, .__h_instagram.card .card-body { padding: 10px 10px 10px; } .__h_instagram.card img { width: 100%; height: auto; }  koloot.design   View More on Instagram   YouTube Privacy Enhanced Shortcode   Twitter Simple Shortcode .twitter-tweet { font: 14px/1.45 -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; border-left: 4px solid #2b7bb9; padding-left: 1.5em; color: #555; } .twitter-tweet a { color: #2b7bb9; text-decoration: none; } blockquote.twitter-tweet a:hover, blockquote.twitter-tweet a:focus { text-decoration: underline; }  “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }  ","description":"A brief description of Hugo Shortcodes","id":10,"section":"posts","tags":["shortcodes","privacy"],"title":"Rich Content","uri":"https://ilyusha71.github.io/posts/rich-content/"},{"content":"Code Syntax Highlighting Verify the following code blocks render as code blocks and highlight properly.\nMore about tuning syntax highlighting is the Hugo documentation.\nDiff 1 2 3 4 5 6 7 8 9 10  *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39;\r--- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39;\r***************\r*** 1 ****\r! This is a line.\r--- 1 ---\r! This is a replacement line.\rIt is important to spell\r-removed line\r+new line\r  *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39;\r--- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39;\r***************\r*** 1 ****\r! This is a line.\r--- 1 ---\r! This is a replacement line.\rIt is important to spell\r-removed line\r+new line\rMakefile CC=gcc\rCFLAGS=-I.\rhellomake: hellomake.o hellofunc.o\r$(CC) -o hellomake hellomake.o hellofunc.o -I.\r1 2 3 4 5  CC=gcc\rCFLAGS=-I.\rhellomake: hellomake.o hellofunc.o\r$(CC) -o hellomake hellomake.o hellofunc.o -I.\r  JSON 1 2 3  {\u0026#34;employees\u0026#34;:[\r{\u0026#34;firstName\u0026#34;:\u0026#34;John\u0026#34;, \u0026#34;lastName\u0026#34;:\u0026#34;Doe\u0026#34;},\r]}\r  Markdown 1 2 3  **bold** *italics* [link](www.example.com)\r  JavaScript 1  document.write(\u0026#39;Hello, world!\u0026#39;);\r  CSS 1 2 3  body {\rbackground-color: red;\r}\r  Objective C 1 2 3 4 5 6  #import \u0026lt;stdio.h\u0026gt;\r\rint main (void)\r{\rprintf (\u0026#34;Hello world!\\n\u0026#34;);\r}\r  Python 1  print \u0026#34;Hello, world!\u0026#34;\r  XML 1 2 3 4 5  \u0026lt;employees\u0026gt;\r\u0026lt;employee\u0026gt;\r\u0026lt;firstName\u0026gt;John\u0026lt;/firstName\u0026gt; \u0026lt;lastName\u0026gt;Doe\u0026lt;/lastName\u0026gt;\r\u0026lt;/employee\u0026gt;\r\u0026lt;/employees\u0026gt;\r  Perl 1  print \u0026#34;Hello, World!\\n\u0026#34;;\r  Bash 1  echo \u0026#34;Hello World\u0026#34;\r  PHP 1  \u0026lt;?php echo \u0026#39;\u0026lt;p\u0026gt;Hello World\u0026lt;/p\u0026gt;\u0026#39;; ?\u0026gt;   CoffeeScript 1  console.log(“Hello world!”);\r  C# 1 2 3 4 5 6 7 8  using System;\rclass Program\r{\rpublic static void Main(string[] args)\r{\rConsole.WriteLine(\u0026#34;Hello, world!\u0026#34;);\r}\r}\r  C++ 1 2 3 4 5 6 7  #include \u0026lt;iostream.h\u0026gt;\r\rmain()\r{\rcout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34;;\rreturn 0;\r}\r  SQL 1 2  SELECT column_name,column_name\rFROM table_name;\r  Go 1 2 3 4 5  package main\rimport \u0026#34;fmt\u0026#34;\rfunc main() {\rfmt.Println(\u0026#34;Hello, 世界\u0026#34;)\r}\r  Ruby 1  puts \u0026#34;Hello, world!\u0026#34;\r  Java 1 2 3 4 5 6 7 8 9 10 11 12  import javax.swing.JFrame; //Importing class JFrame\rimport javax.swing.JLabel; //Importing class JLabel\rpublic class HelloWorld {\rpublic static void main(String[] args) {\rJFrame frame = new JFrame(); //Creating frame\r frame.setTitle(\u0026#34;Hi!\u0026#34;); //Setting title frame\r frame.add(new JLabel(\u0026#34;Hello, world!\u0026#34;));//Adding text to frame\r frame.pack(); //Setting size to smallest\r frame.setLocationRelativeTo(null); //Centering frame\r frame.setVisible(true); //Showing frame\r }\r}\r  Latex Equation 1  \\frac{d}{dx}\\left( \\int_{0}^{x} f(u)\\,du\\right)=f(x).\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  import {x, y} as p from \u0026#39;point\u0026#39;;\rconst ANSWER = 42;\rclass Car extends Vehicle {\rconstructor(speed, cost) {\rsuper(speed);\rvar c = Symbol(\u0026#39;cost\u0026#39;);\rthis[c] = cost;\rthis.intro = `This is a car runs at\r${speed}.`;\r}\r}\rfor (let num of [1, 2, 3]) {\rconsole.log(num + 0b111110111);\r}\rfunction $initHighlight(block, flags) {\rtry {\rif (block.className.search(/\\bno\\-highlight\\b/) != -1)\rreturn processBlock(block.function, true, 0x0F) + \u0026#39; class=\u0026#34;\u0026#34;\u0026#39;;\r} catch (e) {\r/* handle exception */\rvar e4x =\r\u0026lt;div\u0026gt;Example\r\u0026lt;p\u0026gt;1234\u0026lt;/p\u0026gt;\u0026lt;/div\u0026gt;;\r }\rfor (var i = 0 / 2; i \u0026lt; classes.length; i++) {\r// \u0026#34;0 / 2\u0026#34; should not be parsed as regexp\r if (checkCondition(classes[i]) === undefined)\rreturn /\\d+[\\s/]/g;\r}\rconsole.log(Array.every(classes, Boolean));\r}\rexport $initHighlight;\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;Hello world\u0026lt;/title\u0026gt;\r\u0026lt;link href=\u0026#39;http://fonts.googleapis.com/css?family=Roboto:400,400italic,700,700italic\u0026#39; rel=\u0026#39;stylesheet\u0026#39; type=\u0026#39;text/css\u0026#39;\u0026gt;\r\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;index.css\u0026#34; /\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;script src=\u0026#34;//cdnjs.cloudflare.com/ajax/libs/less.js/2.5.1/less.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script src=\u0026#34;vendor/prism.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script src=\u0026#34;examples.bundle.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  /*********************************************************\r* General\r*/\rpre[class*=\u0026#34;language-\u0026#34;],\rcode {\rcolor: #5c6e74;\rfont-size: 13px;\rtext-shadow: none;\rfont-family: Consolas, Monaco, \u0026#39;Andale Mono\u0026#39;, \u0026#39;Ubuntu Mono\u0026#39;, monospace;\rdirection: ltr;\rtext-align: left;\rwhite-space: pre;\rword-spacing: normal;\rword-break: normal;\rline-height: 1.5;\rtab-size: 4;\rhyphens: none;\r}\rpre[class*=\u0026#34;language-\u0026#34;]::selection,\rcode::selection {\rtext-shadow: none;\rbackground: #b3d4fc;\r}\r@media print {\rpre[class*=\u0026#34;language-\u0026#34;],\rcode {\rtext-shadow: none;\r}\r}\rpre[class*=\u0026#34;language-\u0026#34;] {\rpadding: 1em;\rmargin: .5em 0;\roverflow: auto;\rbackground: #f8f5ec;\r}\r:not(pre) \u0026gt; code {\rpadding: .1em .3em;\rborder-radius: .3em;\rcolor: #db4c69;\rbackground: #f9f2f4;\r}\r  ","description":"Syntax highlighting test","id":11,"section":"posts","tags":["hugo"],"title":"Syntax highlighting","uri":"https://ilyusha71.github.io/posts/syntax-highlight/"},{"content":"We need goldmark katex entension which is not yet we have: [https://github.com/gohugoio/hugo/issues/6544](https://github.com/gohugoio/hugo/issues/6544)\r Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }}\r{{ partial \u0026quot;math.html\u0026quot; . }}\r{{ end }}\r To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files.  Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $$ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $$\nBlock math:\n$$\n\\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","description":"A brief guide to setup KaTeX","id":12,"section":"posts","tags":null,"title":"Math Typesetting","uri":"https://ilyusha71.github.io/posts/math-typesetting/"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3  .emoji {\rfont-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols;\r}  ","description":"Guide to emoji usage in Hugo","id":13,"section":"posts","tags":["emoji","gamoji","namoji","bamoji","amoji"],"title":"Emoji Support","uri":"https://ilyusha71.github.io/posts/emoji-support/"},{"content":"digraph G {\rsubgraph cluster_0 {\rstyle=filled;\rcolor=lightgrey;\rnode [style=filled,color=white];\ra0 -\u0026gt; a1 -\u0026gt; a2 -\u0026gt; a3;\rlabel = \u0026quot;process #1\u0026quot;;\r}\rsubgraph cluster_1 {\rnode [style=filled];\rb0 -\u0026gt; b1 -\u0026gt; b2 -\u0026gt; b3;\rlabel = \u0026quot;process #2\u0026quot;;\rcolor=blue\r}\rstart -\u0026gt; a0;\rstart -\u0026gt; b0;\ra1 -\u0026gt; b3;\rb2 -\u0026gt; a3;\ra3 -\u0026gt; a0;\ra3 -\u0026gt; end;\rb3 -\u0026gt; end;\rstart [shape=Mdiamond];\rend [shape=Msquare];\r}\r","description":"A hack to put Graphviz on the web.","id":14,"section":"posts","tags":[""],"title":"Viz support","uri":"https://ilyusha71.github.io/posts/test-viz/"},{"content":"{ \u0026quot;signal\u0026quot;: [ {\u0026quot;name\u0026quot;: \u0026quot;CLK\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;p.....|...\u0026quot;},\r{\u0026quot;name\u0026quot;:\u0026quot;DAT\u0026quot;, \u0026quot;wave\u0026quot;:\u0026quot;x.345x|=.x\u0026quot;, \u0026quot;data\u0026quot;:[\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;,\u0026quot;D\u0026quot;]},\r{\u0026quot;name\u0026quot;: \u0026quot;REQ\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;0.1..0|1.0\u0026quot;},\r{},\r{\u0026quot;name\u0026quot;: \u0026quot;ACK\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;1.....|01.\u0026quot;}\r]}\r","description":"WaveDrom is a Free and Open Source online digital timing diagram (waveform) rendering engine that uses javascript, HTML5 and SVG to convert a WaveJSON input text description into SVG vector graphics.","id":15,"section":"posts","tags":[""],"title":"Wavedrom support","uri":"https://ilyusha71.github.io/posts/test-wavedrom/"},{"content":"{\r\u0026quot;type\u0026quot;: \u0026quot;bar\u0026quot;,\r\u0026quot;data\u0026quot;: {\r\u0026quot;labels\u0026quot;: [\u0026quot;One\u0026quot;, \u0026quot;Two\u0026quot;, \u0026quot;Three\u0026quot;, \u0026quot;Four\u0026quot;, \u0026quot;Five\u0026quot;, \u0026quot;Six\u0026quot;],\r\u0026quot;datasets\u0026quot;: [{\r\u0026quot;label\u0026quot;: \u0026quot;# of Votes\u0026quot;,\r\u0026quot;data\u0026quot;: [12, 19, 3, 5, 3, 8]\r}]\r}\r}\r{\r\u0026quot;type\u0026quot;: \u0026quot;line\u0026quot;,\r\u0026quot;data\u0026quot;: {\r\u0026quot;labels\u0026quot;: [\u0026quot;One\u0026quot;, \u0026quot;Two\u0026quot;, \u0026quot;Three\u0026quot;, \u0026quot;Four\u0026quot;, \u0026quot;Five\u0026quot;, \u0026quot;Six\u0026quot;],\r\u0026quot;datasets\u0026quot;: [\r{\r\u0026quot;label\u0026quot;: \u0026quot;# of Votes\u0026quot;,\r\u0026quot;data\u0026quot;: [12, 19, 3, 5, 2, 3],\r\u0026quot;backgroundColor\u0026quot;:\u0026quot;transparent\u0026quot;,\r\u0026quot;borderColor\u0026quot;:\u0026quot;orange\u0026quot;\r},\r{\r\u0026quot;label\u0026quot;: \u0026quot;Some other set\u0026quot;,\r\u0026quot;data\u0026quot;: [15, 8, 13, 5, 5, 9],\r\u0026quot;backgroundColor\u0026quot;:\u0026quot;transparent\u0026quot;,\r\u0026quot;borderColor\u0026quot;:\u0026quot;#44ccff\u0026quot;\r}\r]\r}\r}\r","description":"Simple yet flexible JavaScript charting for designers \u0026 developers","id":16,"section":"posts","tags":[""],"title":"Chart support","uri":"https://ilyusha71.github.io/posts/test-chartjs/"},{"content":"Alice-\u0026gt;Bob: Hello Bob, how are you?\rNote right of Bob: Bob thinks\rBob--\u0026gt;Alice: I am good thanks!\rTitle: Here is a title\rA-\u0026gt;B: Normal line\rB--\u0026gt;C: Dashed line\rC-\u0026gt;\u0026gt;D: Open arrow\rD--\u0026gt;\u0026gt;A: Dashed open arrow\r","description":"Generates UML sequence diagrams from simple text","id":17,"section":"posts","tags":[""],"title":"JS Sequence Diagram support","uri":"https://ilyusha71.github.io/posts/test-js-sequence-diagrams/"},{"content":"graph TD;\rA--\u0026gt;B;\rA--\u0026gt;C;\rB--\u0026gt;D;\rC--\u0026gt;D;\rsequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail...\rJohn--\u0026gt;Alice: Great!\rJohn-\u0026gt;Bob: How about you?\rBob--\u0026gt;John: Jolly good!\rgraph TD\rA[Hard] --\u0026gt;|Text| B(Round)\rB --\u0026gt; C{Decision}\rC --\u0026gt;|One| D[Result 1]\rC --\u0026gt;|Two| E[Result 2]\rgantt\rsection Section\rCompleted :done, des1, 2014-01-06,2014-01-08\rActive :active, des2, 2014-01-07, 3d\rParallel 1 : des3, after des1, 1d\rParallel 2 : des4, after des1, 1d\rParallel 3 : des5, after des3, 1d\rParallel 4 : des6, after des4, 1d\rclassDiagram\rClass01 \u0026lt;|-- AveryLongClass : Cool\r\u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01\rClass09 --\u0026gt; C2 : Where am i?\rClass09 --* C3\rClass09 --|\u0026gt; Class07\rClass07 : equals()\rClass07 : Object[] elementData\rClass01 : size()\rClass01 : int chimp\rClass01 : int gorilla\rclass Class10 {\r\u0026lt;\u0026lt;service\u0026gt;\u0026gt;\rint id\rsize()\r}\rstateDiagram\r[*] --\u0026gt; Still\rStill --\u0026gt; [*]\rStill --\u0026gt; Moving\rMoving --\u0026gt; Still\rMoving --\u0026gt; Crash\rCrash --\u0026gt; [*]\rpie\r\u0026quot;Dogs\u0026quot; : 386\r\u0026quot;Cats\u0026quot; : 85\r\u0026quot;Rats\u0026quot; : 15 ","description":"Generate diagrams, charts, graphs or flows from markdown-like text via javascript.","id":18,"section":"posts","tags":["diagram"],"title":"Mermaid support","uri":"https://ilyusha71.github.io/posts/test-mermaid/"},{"content":"When $a \\ne 0$, there are two solutions to $(ax^2 + bx + c = 0)$ and they are\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$\n","description":"A JavaScript display engine for mathematics that works in all browsers.No more setup for readers. It just works.","id":19,"section":"posts","tags":[""],"title":"MathJax support","uri":"https://ilyusha71.github.io/posts/test-mathjax/"},{"content":"The following\n$$ \\int_{a}^{b} x^2 dx $$\nIs an integral\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nEnable Katex in the config file by setting the katex param to true. This will import the necessary Katex CSS/JS.\nSee the online reference of supported TeX functions.\nNote: For inline math to render correctly, your content file extension must be .mmark. See the official mmark site.\nInline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $\rInline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $\nBlock math:\r$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\rBlock math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","description":"KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web.","id":20,"section":"posts","tags":[""],"title":"Katex support","uri":"https://ilyusha71.github.io/posts/test-katex/"},{"content":"st=\u0026gt;start: Start|past:\u0026gt;http://www.google.com[blank]\re=\u0026gt;end: End|future:\u0026gt;http://www.google.com\rop1=\u0026gt;operation: My Operation|past\rop2=\u0026gt;operation: Stuff|current\rsub1=\u0026gt;subroutine: My Subroutine|invalid\rcond=\u0026gt;condition: Yes\ror No?|approved:\u0026gt;http://www.google.com\rc2=\u0026gt;condition: Good idea|rejected\rio=\u0026gt;inputoutput: catch something...|future\rst-\u0026gt;op1(right)-\u0026gt;cond\rcond(yes, right)-\u0026gt;c2\rcond(no)-\u0026gt;sub1(left)-\u0026gt;op1\rc2(yes)-\u0026gt;io-\u0026gt;e\rc2(no)-\u0026gt;op2-\u0026gt;e\r","description":"flowchart.js is a flowchart DSL and SVG render that runs in the browser and terminal. Nodes and connections are defined in separately so that nodes can be reused and connections can be quickly changed.","id":21,"section":"posts","tags":[""],"title":"Flowchart support","uri":"https://ilyusha71.github.io/posts/test-flowchart/"},{"content":"Sample images from Pixabay\n","description":"cartoon gallery","id":22,"section":"gallery","tags":null,"title":"Cartoon","uri":"https://ilyusha71.github.io/gallery/cartoon/"},{"content":"Sample images from Pixabay\n","description":"photo gallery","id":23,"section":"gallery","tags":null,"title":"Photo","uri":"https://ilyusha71.github.io/gallery/photo/"},{"content":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\n https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","description":"Hugo, the world’s fastest framework for building websites","id":28,"section":"","tags":null,"title":"About","uri":"https://ilyusha71.github.io/about/"}]
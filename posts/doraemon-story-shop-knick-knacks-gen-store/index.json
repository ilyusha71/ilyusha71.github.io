[{"content":"遊戲資源  以下圖示儲存在Sprite資料夾下，對應檔名為icon_ + mItemId+.png，mItemId可透過ItemData.text取得。 以下參數為TextAsset資料夾下VarietyShopData.text的轉換的部分資料。  雜貨店MOD資料庫  雜貨店資料檔：VarietyShopData.text 雜貨店資料類：CVarietyShopData，讀取TextAsset的物品二進制資料VarietyShopData.text。  雜貨店的資料結構：CVarietyShopData.SVarietyShopData  商品ID：CVarietyShopData.SVarietyShopData.mVarietyId 物品ID：CVarietyShopData.SVarietyShopData.mItemId 價格：CVarietyShopData.SVarietyShopData.mPrice 販售季節：CVarietyShopData.SVarietyShopData.mSeason  雜貨店只會販售當季的種子。   首年販售：CVarietyShopData.SVarietyShopData.mIsFirstYear  非首年販售的商品會在第二年春季開始販售。   DLC索引：CVarietyShopData.SVarietyShopData.mDLCIndex     商店集成功能界面：ShopMasterCollection  取得雜貨店所有商品的資料（ShopMasterCollection.GetAllVarietyShopDatas()）   商店模組類：ShopMasterModel，取得指定商店的資料結構並記錄該商店所有商品參數的基本值。  商品ID：ShopMasterModel.Id = CVarietyShopData.SVarietyShopData.mVarietyId 物品ID：ShopMasterModel.ItemId = CVarietyShopData.SVarietyShopData.mItemId 販售價格：ShopMasterModel.Price = CVarietyShopData.SVarietyShopData.mPrice 販售季節：ShopMasterModel.Season = CVarietyShopData.SVarietyShopData.mSeason DLC索引：ShopMasterModel.DLCIndex = CVarietyShopData.SVarietyShopData.mDLCIndex 事件ID：ShopMasterModel.EventId   商品模組類：ShopItemDataModel，顯示遊戲中商店目前上架的商品資料。  商品ID：ShopItemDataModel.Id = ShopMasterModel.Id 物品ID：ShopItemDataModel.ItemId = ShopMasterModel.ItemId 商品名稱：ShopItemDataModel.Name = ItemModel.Name 商品描述：ShopItemDataModel.Description = ItemModel.Description 商品價格：ShopItemDataModel.Price = ShopMasterModel.Price 圖集ID：ShopItemDataModel.AtlasId = ItemMasterModel.AtlasId 圖片ID：ShopItemDataModel.SpriteId = ItemModel.Id 是否為物品實體：ShopItemDataModel.IsItemModel，可進行操作的物品，詳見 物品MOD資料庫。 是否為單一物品：ShopItemDataModel.IsSingleItem，只能擁有一件的物品。  例如背包、工具（捕蟲網）、DLC。   只能購買一次：ShopItemDataModel.CanBuyOnce。  例如會升級的物品（背包）、工具（捕蟲網）、DLC。   是否需要存放空間：ShopItemDataModel.IsNeedToEmptyInventory。  例如背包與DLC並不需要存放空間。     FarmWorkState.GetVarietyShopItemDatas(int season)  取得玩家可購買的雜貨店商品列表並進行上架。    雜貨店  營業時間  星期日：15點~20點 星期一：15點~20點 星期二：15點~20點 星期三：15點~20點 星期五：15點~20點 星期六：15點~20點   公休日  星期四    主要角色 \r\r\r埃蒂\r緹拉兒的媽媽\r\r\r\r涅萊爾\r緹拉兒的爸爸\r\r\r\r緹拉兒\r埃蒂的女兒\r\r\r雜貨店商品資料 春季種子 \r\r商品ID\r\r商品名稱\r販售價格\r販售季節\r首年販售\r\r\r100100\r\r蕪菁種子\r30\r春季\r✔\r\r\r100101\r\r馬鈴薯種子\r50\r春季\r✔\r\r\r100102\r\r高麗菜種子\r90\r春季\r\r\r\r100103\r\r小黃瓜種子\r80\r春季\r\r\r\r100104\r\r草莓種子\r150\r春季\r\r\r\r100105\r\r白花椰菜種子\r80\r春季\r\r\r\r100106\r\r豌豆種子\r80\r春季\r\r\r\r100108\r\r瑪格麗特種子\r40\r春季\r✔\r\r\r100110\r\r彩鐘花種子\r70\r春季\r\r\r\r100111\r\r康乃馨種子\r80\r春季\r\r\r\r 商品特性：  是否為物品實體：✔。 是否為單一物品：✘。 只能購買一次：✘。 是否需要存放空間：✔。    夏季種子 \r\r商品ID\r\r商品名稱\r販售價格\r販售季節\r首年販售\r\r\r100200\r\r玉米種子\r140\r夏季\r✔\r\r\r100201\r\r洋蔥種子\r30\r夏季\r\r\r\r100202\r\r南瓜種子\r20\r夏季\r\r\r\r100203\r\r西瓜種子\r40\r夏季\r\r\r\r100204\r\r番茄種子\r110\r夏季\r✔\r\r\r100205\r\r哈密瓜種子\r140\r夏季\r\r\r\r100206\r\r鳳梨種子\r100\r夏季\r\r\r\r100207\r\r甜椒種子\r80\r夏季\r\r\r\r100210\r\r向日葵種子\r80\r夏季\r✔\r\r\r100211\r\r牽牛花種子\r40\r夏季\r\r\r\r100213\r\r百合花種子\r70\r夏季\r\r\r\r100214\r\r木槿種子\r40\r夏季\r\r\r\r100215\r\r紅玫瑰種子\r50\r夏季\r\r\r\r 商品特性：  是否為物品實體：✔。 是否為單一物品：✘。 只能購買一次：✘。 是否需要存放空間：✔。    秋季種子 \r\r商品ID\r\r商品名稱\r販售價格\r販售季節\r首年販售\r\r\r100300\r\r牛蒡種子\r50\r秋季\r\r\r\r100301\r\r胡蘿蔔種子\r80\r秋季\r✔\r\r\r100302\r\r地瓜種子\r40\r秋季\r✔\r\r\r100303\r\r菠菜種子\r30\r秋季\r\r\r\r100304\r\r茄子種子\r70\r秋季\r\r\r\r100305\r\r青椒種子\r90\r秋季\r\r\r\r100306\r\r撫子花種子\r50\r秋季\r✔\r\r\r100307\r\r非洲菊種子\r90\r秋季\r\r\r\r 商品特性：  是否為物品實體：✔。 是否為單一物品：✘。 只能購買一次：✘。 是否需要存放空間：✔。    冬季種子 \r\r商品ID\r\r商品名稱\r販售價格\r販售季節\r首年販售\r\r\r100400\r\r白蘿蔔種子\r20\r冬季\r✔\r\r\r100401\r\r白菜種子\r80\r冬季\r\r\r\r100402\r\r花椰菜種子\r60\r冬季\r\r\r\r100404\r\r雪花蓮種子\r50\r冬季\r✔\r\r\r 商品特性：  是否為物品實體：✔。 是否為單一物品：✘。 只能購買一次：✘。 是否需要存放空間：✔。    四季種子 \r\r商品ID\r\r商品名稱\r販售價格\r販售季節\r首年販售\r\r\r100500\r\r牧草種子\r30\r四季\r✔\r\r\r100501\r\r小麥種子\r50\r四季\r✔\r\r\r 商品特性：  是否為物品實體：✔。 是否為單一物品：✘。 只能購買一次：✘。 是否需要存放空間：✔。    肥料 \r\r商品ID\r\r商品名稱\r販售價格\r販售季節\r首年販售\r\r\r100500\r\r肥料\r20\r四季\r✔\r\r\r100501\r\r高級肥料\r40\r四季\r✔\r\r\r 商品特性：  是否為物品實體：✔。 是否為單一物品：✘。 只能購買一次：✘。 是否需要存放空間：✔。    捕蟲網 \r\r商品ID\r\r商品名稱\r販售價格\r販售季節\r首年販售\r\r\r200000\r\r捕蟲網\r2000\r四季\r✔\r\r\r 商品特性：  是否為物品實體：✔。 是否為單一物品：✔。 只能購買一次：✔。 是否需要存放空間：✔。    背包 \r\r商品ID\r\r商品名稱\r販售價格\r販售季節\r首年販售\r背包空間\r\r\r---\r\r背包\r初始裝備\r---\r---\r8\r\r\r200100\r\r大背包\r6000\r四季\r✔\r16\r\r\r200101\r\r巨大背包\r12000\r四季\r✔\r24\r\r\r 商品特性：  是否為物品實體：✘。 是否為單一物品：✔。 只能購買一次：✔。 是否需要存放空間：✘。    DLC \r\r商品ID\r\r商品名稱\r販售價格\r販售季節\r首年販售\r\r\r300004\r\r春季蔬菜組\r0\r四季\r✔\r\r\r300100\r\r亞緬的預訂品\r0\r四季\r✔\r\r\r 商品特性：  是否為物品實體：✘。 是否為單一物品：✔。 只能購買一次：✔。 是否需要存放空間：✘。   春季蔬菜組  這是歐林先生幫忙準備的種子組。有蕪菁、馬鈴薯、高麗菜、草莓等4種植物種子 購買後去找緹拉兒領取，種子各有20個。   亞緬的預訂品  購買後觸發鎮長亞緬的劇情 大雄不管選看看或不看都能獲得哆啦A夢銅像 哆啦A夢之後都會給疲勞膏與瞬間成長劑各五個    ","description":"雜貨店販售商品","id":2,"section":"posts","tags":["MOD"],"title":"【哆啦A夢牧場物語】雜貨店 小玩意兒","uri":"https://ilyusha71.github.io/posts/doraemon-story-shop-knick-knacks-gen-store/"},{"content":"相關分析  【哆啦A夢牧場物語】作物播種與收成的品質計算 【哆啦A夢牧場物語】肥料對作物的品質影響 【哆啦A夢牧場物語】作物的成長過程與相關計算  遊戲資源  以下圖示儲存在Sprite資料夾下，各作物對應檔名為icon_ + mItemId+.png，mItemId可透過ItemData.text取得。 以下參數為TextAsset資料夾下ItemData.text的轉換的部分資料。  作物出貨資料 詳見 物品MOD資料庫\n出貨價格  品質等級為1的物品，售價為基本售價。 品質等級超過1的物品，售價會根據上一品質等級的出貨價格以售價倍率提升並無條件進位至整數。  春季作物 \r\r作物ID\r作物名稱\r\r0.5★\r1.0★\r1.5★\r2.0★\r2.5★\r3.0★\r3.5★\r4.0★\r4.5★\r5.0★\r\r\r100\r蕪菁\r\r110\r125\r142\r161\r182\r206\r233\r264\r299\r338\r\r\r101\r馬鈴薯\r\r210\r238\r269\r304\r344\r389\r440\r498\r563\r637\r\r\r102\r高麗菜\r\r410\r464\r525\r594\r672\r760\r859\r971\r1098\r1241\r\r\r103\r小黃瓜\r\r120\r136\r154\r175\r198\r224\r254\r288\r326\r369\r\r\r104\r草莓\r\r240\r272\r308\r349\r395\r447\r506\r572\r647\r732\r\r\r105\r白花椰菜\r\r360\r407\r460\r520\r588\r665\r752\r850\r961\r1086\r\r\r106\r豌豆\r\r130\r147\r167\r189\r214\r242\r274\r310\r351\r397\r\r\r108\r瑪格麗特\r\r170\r193\r219\r248\r281\r318\r360\r407\r460\r520\r\r\r110\r彩鐘花\r\r320\r362\r410\r464\r525\r594\r672\r760\r859\r971\r\r\r111\r康乃馨\r\r360\r407\r460\r520\r588\r665\r752\r850\r961\r1086\r\r\r夏季作物 \r\r作物ID\r作物名稱\r\r0.5★\r1.0★\r1.5★\r2.0★\r2.5★\r3.0★\r3.5★\r4.0★\r4.5★\r5.0★\r\r\r200\r玉米\r\r220\r249\r282\r319\r361\r408\r462\r523\r591\r668\r\r\r201\r洋蔥\r\r140\r159\r180\r204\r231\r262\r297\r336\r380\r430\r\r\r202\r南瓜\r\r90\r102\r116\r132\r150\r170\r193\r219\r248\r281\r\r\r203\r西瓜\r\r170\r193\r219\r248\r281\r318\r360\r407\r460\r520\r\r\r204\r番茄\r\r180\r204\r231\r262\r297\r336\r380\r430\r486\r550\r\r\r205\r哈密瓜\r\r660\r746\r843\r953\r1077\r1218\r1377\r1557\r1760\r1989\r\r\r206\r鳳梨\r\r250\r283\r320\r362\r410\r464\r525\r594\r672\r760\r\r\r207\r甜椒\r\r130\r147\r167\r189\r214\r242\r274\r310\r351\r397\r\r\r210\r向日葵\r\r360\r407\r460\r520\r588\r665\r752\r850\r961\r1086\r\r\r211\r牽牛花\r\r170\r193\r219\r248\r281\r318\r360\r407\r460\r520\r\r\r213\r百合花\r\r320\r362\r410\r464\r525\r594\r672\r760\r859\r971\r\r\r214\r木槿\r\r170\r193\r219\r248\r281\r318\r360\r407\r460\r520\r\r\r215\r紅玫瑰\r\r240\r272\r308\r349\r395\r447\r506\r572\r647\r732\r\r\r秋季作物 \r\r作物ID\r作物名稱\r\r0.5★\r1.0★\r1.5★\r2.0★\r2.5★\r3.0★\r3.5★\r4.0★\r4.5★\r5.0★\r\r\r300\r牛蒡\r\r240\r272\r308\r349\r395\r447\r506\r572\r647\r732\r\r\r301\r胡蘿蔔\r\r360\r407\r460\r520\r588\r665\r752\r850\r961\r1086\r\r\r302\r地瓜\r\r60\r68\r77\r88\r100\r113\r128\r145\r164\r186\r\r\r303\r菠菜\r\r110\r125\r142\r161\r182\r206\r233\r264\r299\r338\r\r\r304\r茄子\r\r320\r362\r410\r464\r525\r594\r672\r760\r859\r971\r\r\r305\r青椒\r\r140\r159\r180\r204\r231\r262\r297\r336\r380\r430\r\r\r306\r撫子花\r\r210\r238\r269\r304\r344\r389\r440\r498\r563\r637\r\r\r307\r非洲菊\r\r450\r509\r576\r651\r736\r832\r941\r1064\r1203\r1360\r\r\r冬季作物 \r\r作物ID\r作物名稱\r\r0.5★\r1.0★\r1.5★\r2.0★\r2.5★\r3.0★\r3.5★\r4.0★\r4.5★\r5.0★\r\r\r400\r白蘿蔔\r\r90\r102\r116\r132\r150\r170\r193\r219\r248\r281\r\r\r401\r白菜\r\r360\r407\r460\r520\r588\r665\r752\r850\r961\r1086\r\r\r402\r花椰菜\r\r90\r102\r116\r132\r150\r170\r193\r219\r248\r281\r\r\r404\r雪花蓮\r\r240\r272\r308\r349\r395\r447\r506\r572\r647\r732\r\r\r四季作物 \r\r作物ID\r作物名稱\r\r0.5★\r1.0★\r1.5★\r2.0★\r2.5★\r3.0★\r3.5★\r4.0★\r4.5★\r5.0★\r\r\r500\r牧草\r\r30\r34\r39\r45\r51\r58\r66\r75\r85\r97\r\r\r501\r小麥\r\r50\r57\r65\r74\r84\r95\r108\r123\r139\r158\r\r","description":"37種作物各種品質等級的出貨價格","id":3,"section":"posts","tags":["MOD"],"title":"【哆啦A夢牧場物語】作物出貨資料","uri":"https://ilyusha71.github.io/posts/doraemon-story-crop-sell/"},{"content":"相關分析  【哆啦A夢牧場物語】作物播種與收成的品質計算 【哆啦A夢牧場物語】肥料對作物的品質影響 【哆啦A夢牧場物語】作物的成長過程與相關計算  遊戲資源  以下圖示儲存在Sprite資料夾下，各作物對應檔名為icon_ + mItemId+.png，mItemId可透過ItemData.text取得。 以下參數為TextAsset資料夾下CropData.text的轉換的部分資料。  作物成長資料 詳見 作物MOD資料庫\n春季作物 \r\r作物ID\r作物名稱\r\r收穫次數\r成長階數\r減少階數\r收成天數\r再收成天數\r生長季節\r是否收割\r\r\r100\r蕪菁\r\r1\r4\r-1\r5\r---\r春季\r✘\r\r\r101\r馬鈴薯\r\r1\r4\r-1\r8\r---\r春季\r✘\r\r\r102\r高麗菜\r\r1\r6\r-1\r13\r---\r春季\r✘\r\r\r103\r小黃瓜\r\r3\r5\r2\r9\r5\r春季\r✘\r\r\r104\r草莓\r\r3\r6\r2\r15\r6\r春季\r✘\r\r\r105\r白花椰菜\r\r1\r6\r-1\r12\r---\r春季\r✘\r\r\r106\r豌豆\r\r3\r5\r2\r10\r6\r春季\r✘\r\r\r108\r瑪格麗特\r\r1\r4\r-1\r7\r---\r春季\r✘\r\r\r110\r彩鐘花\r\r1\r5\r-1\r11\r---\r春季\r✘\r\r\r111\r康乃馨\r\r1\r6\r-1\r12\r---\r春季\r✘\r\r\r夏季作物 \r\r作物ID\r作物名稱\r\r收穫次數\r成長階數\r減少階數\r收成天數\r再收成天數\r生長季節\r是否收割\r\r\r200\r玉米\r\r3\r6\r2\r14\r6\r夏季\r✘\r\r\r201\r洋蔥\r\r1\r4\r-1\r6\r---\r夏季\r✘\r\r\r202\r南瓜\r\r1\r4\r-1\r4\r---\r夏季\r✘\r\r\r203\r西瓜\r\r1\r4\r-1\r7\r---\r夏季\r✘\r\r\r204\r番茄\r\r3\r7\r2\r12\r4\r夏季\r✘\r\r\r205\r哈密瓜\r\r1\r6\r-1\r18\r---\r夏季\r✘\r\r\r206\r鳳梨\r\r2\r6\r2\r13\r6\r夏季\r✘\r\r\r207\r甜椒\r\r3\r5\r2\r10\r6\r夏季\r✘\r\r\r210\r向日葵\r\r1\r6\r-1\r12\r---\r夏季\r✘\r\r\r211\r牽牛花\r\r1\r4\r-1\r7\r---\r夏季\r✘\r\r\r213\r百合花\r\r1\r5\r-1\r11\r---\r夏季\r✘\r\r\r214\r木槿\r\r1\r4\r-1\r7\r---\r夏季\r✘\r\r\r215\r紅玫瑰\r\r1\r5\r-1\r9\r---\r夏季\r✘\r\r\r秋季作物 \r\r作物ID\r作物名稱\r\r收穫次數\r成長階數\r減少階數\r收成天數\r再收成天數\r生長季節\r是否收割\r\r\r300\r牛蒡\r\r1\r5\r-1\r9\r---\r秋季\r✘\r\r\r301\r胡蘿蔔\r\r1\r6\r-1\r12\r---\r秋季\r✘\r\r\r302\r地瓜\r\r3\r4\r1\r5\r2\r秋季\r✘\r\r\r303\r菠菜\r\r1\r4\r-1\r5\r---\r秋季\r✘\r\r\r304\r茄子\r\r1\r5\r-1\r11\r---\r秋季\r✘\r\r\r305\r青椒\r\r3\r6\r2\r12\r6\r秋季\r✘\r\r\r306\r撫子花\r\r1\r4\r-1\r8\r---\r秋季\r✘\r\r\r307\r非洲菊\r\r1\r6\r-1\r14\r---\r秋季\r✘\r\r\r冬季作物 \r\r作物ID\r作物名稱\r\r收穫次數\r成長階數\r減少階數\r收成天數\r再收成天數\r生長季節\r是否收割\r\r\r400\r白蘿蔔\r\r1\r4\r-1\r4\r---\r冬季\r✘\r\r\r401\r白菜\r\r1\r6\r-1\r12\r---\r冬季\r✘\r\r\r402\r花椰菜\r\r3\r4\r1\r8\r3\r冬季\r✘\r\r\r404\r雪花蓮\r\r1\r5\r-1\r9\r---\r冬季\r✘\r\r\r四季作物 \r\r作物ID\r作物名稱\r\r收穫次數\r成長階數\r減少階數\r收成天數\r再收成天數\r生長季節\r是否收割\r\r\r500\r牧草\r\r5\r4\r2\r10\r7\r四季\r✔\r\r\r501\r小麥\r\r5\r4\r2\r15\r10\r四季\r✔\r\r","description":"作物成長的相關細節","id":4,"section":"posts","tags":["MOD"],"title":"【哆啦A夢牧場物語】作物成長資料","uri":"https://ilyusha71.github.io/posts/doraemon-story-crop-grow/"},{"content":"相關分析  【哆啦A夢牧場物語】作物播種與收成的品質計算 【哆啦A夢牧場物語】肥料對作物的品質影響 【哆啦A夢牧場物語】作物的成長過程與相關計算  作物的成長 根據CropModel的資料分析，作物的成長機制離不開下列三個參數：\n 收成天數（CropMasterModel.HarvestDays） 成長階數（CropMasterModel.Step） 減少階數（CropMasterModel.ReduceStep）  收成天數 作物的成長過程是以成長值（CropModel.mGrowth）表示。\n每天作物在澆水後都會進行成長（CropModel.Grow()），成長值+1。\n1 2 3 4 5 6 7  public void Grow()\r{\rif (!this.CanHarvest \u0026amp;\u0026amp; !this.IsWithered)\r{\rthis.mGrowth++;\r}\r}\r  當成長值達到收成天數（CropMasterModel.HarvestDays）時，作物就能進行收成（CropModel.CanHarvest）。\n1 2 3 4 5 6 7  public bool CanHarvest\r{\rget\r{\rreturn !this.IsWithered \u0026amp;\u0026amp; this.mGrowth == this.Master.HarvestDays;\r}\r}\r  成長階數 成長階數（CropMasterModel.Step）是作物從種子到成熟需經歷的成長階段總數，也相當於作物外觀的變化。\n 目前作物的成長階數大多為4到6個階段。 在37種作物中，番茄擁有最多的七個成長階段。 成長階段的初始階段為種子剛播種的時候，成長階段為第1階段。 成長階段的最後階段為作物成熟的時候，如果成長階數是6，則作物成熟的成長階段為第6階段。 透過成長進階方法CropModel.GrowStep()可以知道每個成長階段對應的成長值與門檻。 由於剛播種的第一天就可以開始澆水成長（成長值為1），所以第1階段的持續天數會少1天。 瞬間成長劑的效果就是使作物直接立即進入下一階段，成長值的增加量等於現階段與下一階段的成長值門檻的差，因此使用在成長階數較少，收成天數較長的收益較好。  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  public void GrowStep()\r{\rif (this.CanHarvest || this.IsWithered)\r{\rreturn;\r}\rint num2;\rint num = Math.DivRem(this.Master.HarvestDays, this.Master.Step - 1, out num2);\rint num3 = (this.Master.Step - 1 - num2) * num;\rif (this.mGrowth \u0026lt; num3)\r{\rthis.mGrowth += num;\r}\relse\r{\rthis.mGrowth += num + 1;\r}\rif (this.mGrowth \u0026gt; this.Master.HarvestDays)\r{\rthis.mGrowth = this.Master.HarvestDays;\r}\r}\r  從代碼中，可以得知num為收成天數平均分配給成熟前的成長階段（所以為成長階數-1），亦即成熟前每個成長階段對應成長值的基本數量，而餘數num2則為平均分配的剩餘數量，將從最後的成長階段（除去成熟階段）開始分配，透過num3找出餘數分配完時對應成長階段的成長值。\n草莓的成長階段  以草莓為例：  草莓的收成天數為15天。 草莓的成長階數為6。   透過成長進階方法CropModel.GrowStep()，找出可得出草莓成長值對應的成長階段。  num = 3 num2 = 0 num3 = 15    \r第1階段\r第2階段\r第3階段\r第4階段\r第5階段\r第6階段\r\r\r\r\r\r\r\r\r\r\r2天\r3天\r3天\r3天\r3天\r---\r\r\r0~2\r3~5\r6~8\r9~11\r12~14\r15\r\r\r鳳梨的成長階段  再以鳳梨為例：  鳳梨的收成天數為13天。 鳳梨的成長階數為6。   透過成長進階方法CropModel.GrowStep()，找出可得出鳳梨成長值對應的成長階段。  num = 2 num2 = 3 num3 = 4    \r第1階段\r第2階段\r第3階段\r第4階段\r第5階段\r第6階段\r\r\r\r\r\r\r\r\r\r\r1天\r2天\r3天\r3天\r3天\r---\r\r\r0~1\r2~3\r4~6\r7~9\r10~12\r13\r\r\r減少階數（降階） 減少階數（CropMasterModel.ReduceStep）是多次收穫作物收成後重新成長時應減少的成長階段數量。\n亦即作物收成後，土裡的作物會根據減少階數降階到某個成長階段。\n 單次收穫作物的減少階數為-1。 多次收穫作物的減少階數為1或2。 降階減少的成長階段直接對應成長值與品質分的減少量。  以草莓為例：\n 草莓的成長階數為6。 草莓的減少階數為2。  當草莓收成後，土裡重新成長的草莓其成長階段會減少2階（降階）而變成第4階段，同時成長值與品質分也會同比例一併減少。\n降階後的成長值與品質分可透過成長減少方法（CropModel.ReduceGrowth()）計算。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  public void ReduceGrowth()\r{\rif (!this.CanRepeat \u0026amp;\u0026amp; !this.IsWithered)\r{\rreturn;\r}\rint num2;\rint num = Math.DivRem(this.Master.HarvestDays, this.Master.Step - 1, out num2);\rnum2 = ((num2 \u0026lt;= this.Master.ReduceStep) ? num2 : this.Master.ReduceStep);\rint num3 = num * this.Master.ReduceStep + num2;\rthis.mGrowth -= num3;\rthis.mQuality -= Mathf.CeilToInt(Crop.GetUpgradeValue(Item.ID_HIGH_QUALITY_FERTILIZER) / (float)this.Master.HarvestDays) * num3;\rif (this.mQuality \u0026lt; Crop.MIN_QUALITY)\r{\rthis.mQuality = Crop.MIN_QUALITY;\r}\rthis.mRepeatCount++;\r}\r  成長減少方法的公式：\n$$num=\\dfrac {收成天數}{成長階數}的商數$$\n$$num2=\\dfrac {收成天數}{成長階數}的餘數，若餘數大於減少階數則：num2=減少階數$$\n$$num3=num\\times減少階數+num2$$\n透過計算可以發現num3所代表的意義可以為：\n 降階後少掉的成長天數。 降階後少掉的施肥次數。 降階後成長值的減少量。 降階後的再收成天數。  成長值的減少 成長值減少的多寡與減少的成長階段有關。\n 以草莓為例：  降階後的成長階段從第6階段降為第4階段。 參考草莓成長階段的對應表，成長值自然也從第6階段的15變為第4階段的9。   根據成長減少方法的計算公式：\n$$草莓降階後的成長值={收成天數}-{再收成天數}={15}-{6}=9$$  品質分的減少 品質分的減少原理與成長值的減少相同，與降階減少的成長階段有關，然而品質分的成長本身又與施用的肥料有關，所以減少的品質分會以高級肥料的效果進行計算。\n 以草莓為例：  假設收成時的品質分為253分。 成長階段從第6階段降為第4階段，一共少了6天的成長，亦即少了6次的施肥。 根據前篇施肥品質分的計算方法，草莓6次施用高級肥料所增加的品質分為84分。 所以品質分會減少84分變成169分。   根據成長減少方法的計算公式，降階減少的品質分計算公式為：\n$$無條件進位（\\dfrac {高級肥料效果}{收成天數}）\\times{減少的施肥次數}$$\n$$草莓降階後的品質分=253-無條件進位（\\dfrac {200}{15}）\\times6=253-84=169$$  總結 以草莓作為例子總結：\n 已知草莓的收成天數為15天，每次澆水成長值+1，因此收成時成長值為15。 草莓收成後，土裡的草莓成長值會降回到第9天的狀態，亦即成長值為9。 若草莓成長全程使用高級肥料，則品質分也會降回到第9天的品質分。 因此成長階段在第9天的草莓還需要6天才會成熟。 若這6天也都使用高級肥料，再次成熟時，品質分也會與上次收成相同。  ","description":"作物的成長過程與相關計算","id":5,"section":"posts","tags":["MOD"],"title":"【哆啦A夢牧場物語】作物的成長過程與相關計算","uri":"https://ilyusha71.github.io/posts/doraemon-story-crop-part3/"},{"content":"相關分析  【哆啦A夢牧場物語】作物播種與收成的品質計算 【哆啦A夢牧場物語】肥料對作物的品質影響 【哆啦A夢牧場物語】作物的成長過程與相關計算  肥料的品質 \r\r\r肥料\r20\r \r\r高級肥料\r40\r \r一開始從雜貨店買的種子品質都是0.5★，如果不施肥，則作物收成的時候仍會是0.5★，若要讓作物的品質上升，在遊戲中可以選擇一般肥料（ Item.ID_FERTILIZER）或高級肥料（ Item.ID_HIGH_QUALITY_FERTILIZER）來進行施肥。\n高級肥料的價格是一般肥料的兩倍，而提升的效果也是兩倍。\n1 2 3 4 5 6 7 8 9 10 11  private static readonly Dictionary\u0026lt;int, float\u0026gt; UpgradeValueTable = new Dictionary\u0026lt;int, float\u0026gt;\r{\r{\rItem.ID_FERTILIZER,\r100f\r},\r{\rItem.ID_HIGH_QUALITY_FERTILIZER,\r200f\r}\r};\r  施肥品質提升計算公式 品質提升方法（CropModel.Upgrade(int item_id)）：\n1 2 3 4 5 6 7 8 9 10 11 12  public void Upgrade(int item_id)\r{\rif (this.CanHarvest || this.IsWithered)\r{\rreturn;\r}\rthis.mQuality += Mathf.CeilToInt(Crop.GetUpgradeValue(item_id) / (float)this.Master.HarvestDays);\rif (this.mQuality \u0026gt; Crop.MAX_QUALITY)\r{\rthis.mQuality = Crop.MAX_QUALITY;\r}\r}\r  品質提升方法的計算公式：\n$$提升的品質分=無條件進位（\\dfrac {肥料效果}{收成天數}）$$\n草莓的施肥提升比較 以雜貨店買的草莓種子為例，草莓的收成天數（CropMasterModel.HarvestDays）為15天：\n若全程使用一般肥料，則每天品質均增加7分，成熟時品質為106分，採收後的草莓為1.5★。\n$$一般肥料提升的品質分=無條件進位（\\dfrac {一般肥料效果}{收成天數}）=無條件進位（\\dfrac {100}{15}）=7$$\n若改用高級肥料，每天品質則增加14分，成熟時品質為211分，採收後的草莓為2.5★。\n$$高級肥料提升的品質分=無條件進位（\\dfrac {高級肥料效果}{收成天數}）=無條件進位（\\dfrac {200}{15}）=14$$\n事實上，根據作物資料的分析結果，在遊戲中所有作物在收成後最多都只會增加2★。\n亦即全程使用高級肥料，也要進行三次播種才會變成5★（注意每次播種都會先降0.5★）。\n 第一次播種到收成：0.5★→2.5★ 第二次播種到收成：2★→4★ 第三次播種到收成：3.5★→5★  ","description":"肥料對作物的品質影響","id":6,"section":"posts","tags":["MOD"],"title":"【哆啦A夢牧場物語】肥料對作物的品質影響","uri":"https://ilyusha71.github.io/posts/doraemon-story-crop-part2/"},{"content":"相關分析  【哆啦A夢牧場物語】作物播種與收成的品質計算 【哆啦A夢牧場物語】肥料對作物的品質影響 【哆啦A夢牧場物語】作物的成長過程與相關計算  作物MOD資料庫 作物與種子均屬於物品類，相關MOD調用參考物品的品質。\n 作物資料檔：CropData.text 作物資料類：CCropData，讀取TextAsset的物品二進制資料CropData.text。  作物的資料結構：CCropData.SCropData  作物ID：CCropData.SCropData.mCropId 名稱ID：CCropData.SCropData.mNameId 收穫次數：CCropData.SCropData.mHarvestCount 成長階數：CCropData.SCropData.mStep 減少階數：CCropData.SCropData.mReduceStep 收成天數：CCropData.SCropData.mHarvestDays 生長季節：CCropData.SCropData.mSeason  0為春季生長、1為夏季生長、2為秋季生長、3為冬季生長、-1為四季皆生長。   是否收割：CCropData.SCropData.mCanReap 圖集ID：CCropData.SCropData.mAtlasId 圖片ID：CCropData.SCropData.mSpriteId 物品ID：CCropData.SCropData.mItemId 種子ID：CCropData.SCropData.mSeedItemId     作物模組類：CropMasterModel，取得作物的資料結構並記錄所有作物參數的基本值。  作物ID：CropMasterModel.CropId = CCropData.SCropData.mCropId 收穫次數：CropMasterModel.HarvestCount = CCropData.SCropData.mHarvestCount 成長階數：CropMasterModel.Step = CCropData.SCropData.mStep 減少階數：CropMasterModel.ReduceStep = CCropData.SCropData.mReduceStep 收成天數：CropMasterModel.HarvestDays = CCropData.SCropData.mHarvestDays 生長季節：CropMasterModel.Season = CCropData.SCropData.mSeason 是否收割：CropMasterModel.CanReap = CCropData.SCropData.mCanReap   作物實體類CropModel，顯示目前遊戲中各項作物參數的實際值與具體的計算方法。  成長方法：CropModel.Grow() 減少成長方法：CropModel.GrowStep() 成長值：CropModel.Growth 品質分：CropModel.Quality   作物定義類：Crop，定義作物資料調用的相關參數。  最低品質分：MIN_QUALITY，常數值：1 最高品質分：Crop.MAX_QUALITY，常數值：500 品質轉換率：Crop.QUALITY_CONVERSION_RATE，常數值：50    作物的品質分 當種子播種後，會變成地上的莊稼（GroundModel.mCrop），莊稼的實體資料為作物實體類（CropModel）。\n而種子品質等級（ItemModel.mQuality）則會轉換為作物品質分（CropModel.mQuality）；直到作物收成時才會再根據最後的作物品質分轉換為作物品質等級（CropModel.Quality）。\n 作物的最低品質（Crop.MIN_QUALITY）為1分。 作物的最高品質（Crop.MAX_QUALITY）為500分。  播種品質轉換公式 播種方法（GroundModel.SowSeed(int crop_id, int item_quality)）：\n1 2 3 4 5 6 7 8 9  public void SowSeed(int crop_id, int item_quality)\r{\rif (this.HasCrop || this.Type != Ground.TypeEnum.Cultivated)\r{\rreturn;\r}\rint quality = (item_quality - 2) * Crop.QUALITY_CONVERSION_RATE;\rthis.mCrop = new CropModel(crop_id, quality);\r}\r  1 2 3 4 5  public CropModel(int id, int quality)\r{\rthis.mId = id;\rthis.mQuality = Mathf.Clamp(quality, Crop.MIN_QUALITY, Crop.MAX_QUALITY);\r}\r  播種方法的品質轉換公式：\n$$作物品質分=（種子品質等級-2）\\times{作物品質轉換率}$$\n$$作物品質轉換率=\\dfrac {最大品質分}{最大品質等級}=\\dfrac {500}{10}=50$$\n播種品質轉換量化表    種子★級 0.5★ 1★ 1.5★ 2★ 2.5★ 3★ 3.5★ 4★ 4.5★ 5★     種子品質等級 1 2 3 4 5 6 7 8 9 10   作物品質分 0 0 50 100 150 200 250 300 350 400   作物★級 0.5★ 0.5★ 1★ 1.5★ 2★ 2.5★ 3★ 3.5★ 4★ 4.5★    所以種子播種後品質就會直接先降1級，相當於★級降0.5★。\n作物收成品質轉換公式 作物的品質等級（CropModel.Quality）讀取子：\n1 2 3 4 5 6 7  public int Quality\r{\rget\r{\rreturn (this.mQuality != Crop.MAX_QUALITY) ? (this.mQuality / Crop.QUALITY_CONVERSION_RATE + 1) : Item.MAX_QUALITY;\r}\r}\r  作物品質等級轉換公式：\n$$作物品質等級=\\dfrac{作物品質分}{作物品質轉換率}+1$$\n收成品質轉換量化表    作物品質分 1~49 50~99 100~149 150~199 200~249 250~299 300~349 350~399 400~449 450~500     作物品質等級 1 2 3 4 5 6 7 8 9 10   作物★級 0.5★ 1★ 1.5★ 2★ 2.5★ 3★ 3.5★ 4★ 4.5★ 5★    ","description":"作物播種與收成的品質計算方法","id":7,"section":"posts","tags":["MOD"],"title":"【哆啦A夢牧場物語】作物播種與收成的品質計算","uri":"https://ilyusha71.github.io/posts/doraemon-story-crop-part1/"},{"content":"物品MOD資料庫  物品資料檔：ItemData.text 物品資料類：CItemData，讀取TextAsset的物品二進制資料ItemData.text。  物品的資料結構：CItemData.SItemData  物品ID：CItemData.SItemData.mItemId 價格：CItemData.SItemData.mPrice 作物ID：CItemData.SItemData.mCropId     物品模組類：ItemMasterModel，取得物品的資料結構並記錄所有物品參數的基本值。  物品ID：ItemMasterModel.Id = CItemData.SItemData.mItemId 基本售價：ItemMasterModel.BaseSellingPrice = CItemData.SItemData.mPrice 體力回復：ItemMasterModel.RecoveryValue 具有品質等級：ItemMasterModel.HasQuality 名稱ID：ItemMasterModel.NameId 描述ID：ItemMasterModel.DescriptionId 最小尺寸：ItemMasterModel.MinSize 最大尺寸：ItemMasterModel.MaxSize   物品實體類：ItemModel，顯示目前遊戲中各項物品參數的實際值與具體的計算方法。  堆疊數量：ItemModel.Count 品質等級：ItemModel.Quality，品質等級與★級對照表 售價：ItemModel.SellingPrice，依品質等級高低而定。   物品定義類：Item，定義物品資料調用的相關參數。  最大堆疊數：Item.MAX_STACK 售價倍率：Item.SELLING_PRICE_RATE，常數值：1.13    物品的品質 在《哆啦A夢：大雄的牧場物語》中，大多數的物品都具有品質等級（ItemMasterModel.mHasQuality），例如礦石、作物、魚、昆蟲、料理，少部分物品則無品質等級，例如工具、肥料、野生蔬果、食譜。\n品質等級 ItemModel.Quality  遊戲中的品質等級以★級顯示品質的優劣程度。  若物品具有品質等級則初始值為1（ItemModel.mQuality）， 對應★級為0.5★ 最大品質等級（Item.MAX_QUALITY）為10級。    品質等級與★級對照表    品質等級 1 2 3 4 5 6 7 8 9 10     ★ 級 0.5★ 1★ 1.5★ 2★ 2.5★ 3★ 3.5★ 4★ 4.5★ 5★    ","description":"物品的品質資料","id":8,"section":"posts","tags":["MOD"],"title":"【哆啦A夢牧場物語】物品的品質","uri":"https://ilyusha71.github.io/posts/doraemon-story-item-part1/"},{"content":"MOD 本篇參考MOD製作者 a_nderw 的解說：如何让大雄加载mod\n以下MOD均來自3DM。\n哆啦A夢牧場物語的MOD主要有三種類型，安裝方法並不相同也不能直接替換dll檔。\n遊戲安裝目錄 Steam版的哆啦A夢牧場物語安裝目錄應該會是在Steam安裝目錄下的這個位置：\nSteam\\steamapps\\common\\DORAEMON STORY OF SEASONS\n第一類MOD：整合的Assembly-CSharp.dll 使用Unity開發的遊戲都會有Assembly-CSharp.dll這個檔案，通常是放在遊戲目錄下的這個位置：\nDORaEMON STORY OF SEASONS_Data\\Managed\n若MOD是Assembly-CSharp.dll，表示MOD本身的功能已經重新編譯在裡面，直接替換掉遊戲安裝目錄下的檔案即可。\n需要使用這個方法的MOD有：\n 《哆啦A梦：大雄的牧场物语》作物品质上升速度提高MOD by nethunter  第二類MOD：單獨的.dll檔 使用這類的MOD需先下載 zealot180 開發的MOD支持補丁《哆啦A梦：大雄的牧场物语》游戏MOD支持补丁，複製補丁裡面的Assembly-CSharp.dll與0Harmony.dll，再到遊戲目錄的DORaEMON STORY OF SEASONS_Data\\Managed覆蓋掉原來的Assembly-CSharp.dll，以及0Harmony.dll，建議操作前進行備份。\n需要使用這個方法的MOD有：\n 《哆啦A梦：大雄的牧场物语》快速钓鱼MOD by zealot180 《哆啦A梦：大雄的牧场物语》矿场下层洞口固定点刷新MOD by weitianhan 《哆啦A梦：大雄的牧场物语》镰刀收割作物MOD by weitianhan 《哆啦A梦：大雄的牧场物语》大型十页存货箱MOD by zealot180  StorageTableCount，不再為了爆倉爆冰箱而煩惱。。。   《哆啦A梦：大雄的牧场物语》在家看帐本MOD by zealot180 《哆啦A梦：大雄的牧场物语》NPC无限送礼物MOD by zealot180  InfiniteReceivePresent，測試與實驗遊戲數據方便。   《哆啦A梦：大雄的牧场物语》动物可以无限喂零食MOD by zealot180  InfiniteSnack，測試方便。   《哆啦A梦：大雄的牧场物语》作物5星收获MOD by zealot180 《哆啦A梦：大雄的牧场物语》体力消耗减半MOD by a_nderw 《哆啦A梦：大雄的牧场物语》移动速度加快MOD by a_nderw 《哆啦A梦：大雄的牧场物语》半夜睡觉无体力惩罚MOD by a_nderw 《哆啦A梦：大雄的牧场物语》超级午睡MOD by a_nderw 《哆啦A梦：大雄的牧场物语》时间变慢MOD by a_nderw 《哆啦A梦：大雄的牧场物语》建筑一日完工MOD by ialger 《哆啦A梦：大雄的牧场物语》铁匠商铺出售宝石MOD by zealot180  AddMineralShopItem，遊戲中後期推薦使用，這樣遊戲前期可以把不需要的高級礦石直接賣錢。   《哆啦A梦：大雄的牧场物语》安静的大雄MOD by a_nderw 《哆啦A梦：大雄的牧场物语》晚上放牧不会降好感MOD by a_nderw 《哆啦A梦：大雄的牧场物语》无损种植收获MOD by a_nderw 《哆啦A梦：大雄的牧场物语》5倍破坏力MOD by a_nderw 《哆啦A梦：大雄的牧场物语》床上三件套MOD by a_nderw  supperBedAccount，在家查賬，測試的時候很方便。 supperBedAffiche，等同於在家上網看電子公佈欄。 supperBedPictureBook，快速查看圖鑒。   《哆啦A梦：大雄的牧场物语》物品堆叠上限提高MOD by a_nderw  stackEX.dll，必裝MOD，囤積材料破百不煩惱 第三類MOD也有同功能MOD   《哆啦A梦：大雄的牧场物语》作物不会枯萎MOD by a_nderw 《哆啦A梦：大雄的牧场物语》家具摆放MOD by a_nderw 《哆啦A梦：大雄的牧场物语》A梦帮忙做农活MOD by zealot180  DoCropWork，後期大面積栽種這個會很有幫助。   《哆啦A梦：大雄的牧场物语》消除屏幕白边MOD by a_nderw 《哆啦A梦：大雄的牧场物语》快速下矿MOD by 没有翅膀的白鸽 《哆啦A梦：大雄的牧场物语》动物对话显示压力MOD by a_nderw  talkMessageShowStress，測試與實驗使用，正常玩遊戲沒差太多。   《哆啦A梦：大雄的牧场物语》放牧强化MOD by a_nderw  第三類MOD：壓縮檔帶有dll檔與json文件 這類MOD需下載Unity Mod 管理工具(Unity Mod Manager) 0.21.2汉化版，打開UnityModManager.exe（注意不要去更新），選擇哆啦A梦：大雄的牧场物语然後選擇遊戲的安裝目錄，按下Install，會在遊戲目錄的根目錄新增一個Mods的資料夾，把所有要裝的Mod的資料夾放進去即可，又或是直接把解壓縮檔拉進Unity Mode 管理器的Mod也行，注意！由於Mod的資料夾是簡體字，使用繁體電腦透過管理器生成的Mod資料夾會變成亂碼哦！\n需要使用這個方法的補丁有：\n 游戏时间流逝的更慢 by a_nderw 提高物品的堆叠上限 by a_nderw 隐藏屏幕四周的白边 by a_nderw 界面直接显示出体力 by a_nderw  與第二類MOD同時使用會產生衝突，進入遊戲後會花屏。   让桌子有特殊的功能 by a_nderw  與第二類MOD同時使用會產生衝突，無法激活。   可以保存自定义键位 by a_nderw  解決官方始終不修復的Bug   减少钓鱼的等待时间 by a_nderw 用双击快速存取物品 by a_nderw 午睡回复更多的体力 by a_nderw  ","description":"手把手教你安裝MOD","id":9,"section":"posts","tags":null,"title":"【哆啦A夢牧場物語】MOD安裝方法","uri":"https://ilyusha71.github.io/posts/doraemon-story-mod-install/"},{"content":"17年在台灣參加Unity工作坊的一個項目——Hover Race，曾使用preview版本的TMP，記得當時可以直接把TMP Text拖到Timeline就能建立TMP的Track與Clip，並直接建立文本變換。最近有個項目需要使用這個功能，多年沒碰Timeline（DoTween使用慣了就懶）發現這個功能消失了，看到知乎的這篇Timeline中让你事半功倍的工具链才知道有些功能被整合自獨立的Asset了，於是重新研究了一下，並再次實現這個功能。\n如果你的專題也有Timeline變換TMP文本的需求就看下去，同時也能一同學習客製化Playable。\n開發環境  Unity 2018.4.20f1 TextMesh Pro 1.4.1  下載Default Playables 先到Asset Store下載最新版的Default Playables，這是Unity官方自行整合的Playable功能包。\n導入後刷新Timeline窗口，可以發現增加了一堆功能，而我們要使用的文本轉換也有，可惜地是只支援UGUI Text，不過可以在Asset中的DefaultPlayables中找到Text Switcher Track功能的源代碼，看起來只要將裡面的UGUI Text全部換成TMP Text就能實作TMP Text Switcher Track。\n實作TMP Text Switcher Track 在DefaultPlayables的TextSwitcher目錄中包含五個腳本，以下直接複製一份TextSwitcher到根目錄改名為TMPTextSwitcher。\n接下來就要改裡面的代碼。\nTMPTextSwitcherBehaviour 在TMPTextSwitcherBehaviour.cs中只要改類名稱即可。\n這部分是實作TMP Text能被修改的變量，有需求可自行增加。\n1 2 3 4 5 6 7  [Serializable]\rpublic class TMPTextSwitcherBehaviour : PlayableBehaviour\r{\rpublic Color color = Color.white;\rpublic int fontSize = 14;\rpublic string text;\r}\r  TMPSwitcherDrawer 在Editor資料夾下的TMPSwitcherDrawer.cs主要是描繪Inspector的顯示界面，內容對應TMPTextSwitcherBehaviour中需要修改的變量，需要修改的地方有兩處：\n CustomPropertyDrawer標籤的指定型別  1  [CustomPropertyDrawer(typeof(TMPTextSwitcherBehaviour))]\r   類名稱  1 2 3 4  public class TMPSwitcherDrawer : PropertyDrawer\r{\r...\r}\r  TMPTextSwitcherClip TMPTextSwitcherClip.cs的修改有三處：\n 類名稱  1 2 3 4 5  [Serializable]\rpublic class TMPTextSwitcherClip : PlayableAsset, ITimelineClipAsset\r{\r...\r}\r   template的宣告與初始  1 2 3 4 5  public class TMPTextSwitcherClip : PlayableAsset, ITimelineClipAsset\r{\rpublic TMPTextSwitcherBehaviour template = new TMPTextSwitcherBehaviour ();\r...\r}\r   playable的建立方法  1 2 3 4 5 6 7 8 9  public class TMPTextSwitcherClip : PlayableAsset, ITimelineClipAsset\r{\r...\rpublic override Playable CreatePlayable (PlayableGraph graph, GameObject owner)\r{\rvar playable = ScriptPlayable\u0026lt;TMPTextSwitcherBehaviour\u0026gt;.Create (graph, template);\rreturn playable;\r}\r}\r  TMPTextSwitcherMixerBehaviour  類名稱  1 2 3 4  public class TMPTextSwitcherMixerBehaviour : PlayableBehaviour\r{\r...\r}\r   inputPlayable的宣告與初始化 input的宣告  1 2 3 4 5 6 7 8 9 10 11 12  public override void ProcessFrame(Playable playable, FrameData info, object playerData)\r{\r...\rfor (int i = 0; i \u0026lt; inputCount; i++)\r{\r...\rScriptPlayable\u0026lt;TMPTextSwitcherBehaviour\u0026gt; inputPlayable = (ScriptPlayable\u0026lt;TMPTextSwitcherBehaviour\u0026gt;)playable.GetInput(i);\rTMPTextSwitcherBehaviour input = inputPlayable.GetBehaviour ();\r...\r}\r...\r}\r   引入TMPro m_DefaultFontSize的型別改為float m_TrackBinding的型別改為TextMeshProUGUI  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  // using UnityEngine.UI;\rusing TMPro;\rpublic class TMPTextSwitcherMixerBehaviour : PlayableBehaviour\r{\r...\rfloat m_DefaultFontSize;\r...\rTextMeshProUGUI m_TrackBinding;\r...\rpublic override void ProcessFrame(Playable playable, FrameData info, object playerData)\r{\rm_TrackBinding = playerData as TextMeshProUGUI;\r...\r}\r}\r  TextSwitcherTrack TextSwitcherTrack.cs\n 引入TMPro TrackClipType標籤的指定型別為TMPTextSwitcherClip TrackBindingType標籤的指定型別為TextMeshProUGUI 類名稱  1 2 3 4 5 6 7 8 9  // using UnityEngine.UI;\rusing TMPro;\r[TrackClipType(typeof(TMPTextSwitcherClip))]\r[TrackBindingType(typeof(TextMeshProUGUI))]\rpublic class TMPTextSwitcherTrack : TrackAsset\r{\r...\r}\r   CreateTrackMixerde的建立方法  1 2 3 4 5 6 7 8  public class TMPTextSwitcherTrack : TrackAsset\r{\rpublic override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)\r{\rreturn ScriptPlayable\u0026lt;TMPTextSwitcherMixerBehaviour\u0026gt;.Create (graph, inputCount);\r}\r...\r}\r   trackBinding的型別修改為TextMeshProUGUI driver.AddFromName方法的型別  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  public class TMPTextSwitcherTrack : TrackAsset\r{\r...\rpublic override void GatherProperties (PlayableDirector director, IPropertyCollector driver)\r{\r#if UNITY_EDITOR\r TextMeshProUGUI trackBinding = director.GetGenericBinding(this) as TextMeshProUGUI;\r...\rwhile (iterator.NextVisible(true))\r{\r...\rdriver.AddFromName\u0026lt;TextMeshProUGUI\u0026gt;(trackBinding.gameObject, iterator.propertyPath);\r}\r#endif\r ...\r}\r}\r  ","description":"手把手改寫Playable讓Timeline支援TextMeshPro進行文本變化","id":10,"section":"posts","tags":["Playable","Timeline","TextMeshPro"],"title":"讓Unity的Timeline支援TextMeshPro進行文本變化","uri":"https://ilyusha71.github.io/posts/unity-timeline-tmp/"},{"content":"實作環境  Unity2018.3.0f2 PUN 2.17 Photon lib 4.1.3.0 Photon Cloud Realtime App  PUN2 相關筆記  關於PUN2的設置方法參考：PUN2 快速上手 關於PUN2的Realtime API參考：PUN2 Realtime API 筆記  連線前設定 由於咱的PUN專案為了提供中國內地網友測試，所以開通了Photon的中國伺服器（中國地區的連線服務需要額外向Photon申請才能使用），由於這項功能是針對單一應用程式使用，所以為了將中國伺服器的連線納入使用，因此會有兩組appId。\n導入Realtime的命名空間 在本次的實作中會使用到RegionHandler，必須在連線腳本中導入相關的命名空間。\n1  using Photon.Realtime;\r  設定應用程式ID（AppId） AppId一般都直接在PhotonServerSettings設定，無須在代碼中重新設定，除非遊戲還進行分區限制，例如開通了中國地區的伺服器，此時可以在正式連線前讓玩家進行選擇，請在調用連線方法前加入下列代碼，即可重新指定AppId。\n1 2 3 4  // 重設 AppId\rPhotonNetwork.PhotonServerSettings.AppSettings.AppIdRealtime = \u0026#34;replace with your own AppId\u0026#34;;\r// 初始化 AppId，這一行無論有沒有重設 AppId 都是必要的。\rPhotonNetwork.NetworkingClient.AppId = PhotonNetwork.PhotonServerSettings.AppSettings.AppIdRealtime;\r  設定名稱伺服器（NameServerHost） 連線前必須指定名稱伺服器，請在調用連線方法前加入下列代碼：\n1  PhotonNetwork.NetworkingClient.NameServerHost = \u0026#34;ns.exitgames.com\u0026#34;;\r  若使用中國地區伺服器，名稱伺服器則為：\n1  PhotonNetwork.NetworkingClient.NameServerHost = \u0026#34;ns.photonengine.cn\u0026#34;;\r  如果不加這一段代碼，預設的NameServerHost會是 ns.exitgames.com。\n連接名稱伺服器 完成前面的設定後，即可透過下列代碼調用與名稱伺服器的連線。\n1  PhotonNetwork.NetworkingClient.ConnectToNameServer();\r  此時觀察ClientState會變成ConnectingToNameServer，當連線與加密完成後會變成ConnectedToNameServer。\n選擇名稱伺服器 透過遊戲介面的設計來調用不同的連線設定，即可讓玩家自行選擇名稱伺服器，參考以下範例。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  public void ConnectInternationServer()\r{\rPhotonNetwork.PhotonServerSettings.AppSettings.AppIdRealtime = \u0026#34;6799355d-d8ce-4acd-b64f-688c4a368ccf\u0026#34;; // TODO: replace with your own AppId\r PhotonNetwork.NetworkingClient.AppId = PhotonNetwork.PhotonServerSettings.AppSettings.AppIdRealtime;\rPhotonNetwork.NetworkingClient.NameServerHost = \u0026#34;ns.exitgames.com\u0026#34;;\rPhotonNetwork.NetworkingClient.ConnectToNameServer();\r}\rpublic void ConnectChinaServer()\r{\rPhotonNetwork.PhotonServerSettings.AppSettings.AppIdRealtime = \u0026#34;4f3da426-b335-47c1-ab69-7dd9e6578c10\u0026#34;; // TODO: replace with your own AppId\r PhotonNetwork.NetworkingClient.AppId = PhotonNetwork.PhotonServerSettings.AppSettings.AppIdRealtime;\rPhotonNetwork.NetworkingClient.NameServerHost = \u0026#34;ns.photonengine.cn\u0026#34;;\rPhotonNetwork.NetworkingClient.ConnectToNameServer();\r}\r  連線後設定 在連上名稱伺服器的同時會在LoadBalancingClient內部調用OpGetRegions方法取得地區列表，這個列表儲存在RegionHandler裡面並透過回傳方法OnRegionListReceived取得。\n1  void OnRegionListReceived (RegionHandler regionHandler);\r  以下是RegionHandler與Region類的常用變數與方法：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  class RegionHandler\r{\r//這份列表記錄了該名稱伺服器底下的可用地區\r List\u0026lt;Region\u0026gt; EnabledRegions\r// 回傳ping值最低的地區\r Region BestRegion\r// 總結BestRegion與EnabledRegions的結果\r string SummaryToCache\r// 測試並找出ping值最低的地區\r bool PingMinimumOfRegions\r}\rclass Region\r{\r// 地區名稱，例如：asia,au,cae,eu,in,jp,kr,ru,rue,sa,us,usw,za\r string Code\r// 地區ping值\r int Ping }\r  測試各地區的ping值  首先透過覆寫OnRegionListReceived取得RegionHandler。 再調用RegionHandler裡面的PingMinimumOfRegions方法。 新增一個方法OnRegionPingCompleted來接收回傳的RegionHandler，回傳方法可按需求自由命名。  1 2 3 4 5 6 7  public override void OnRegionListReceived(RegionHandler regionHandler)\r{\rregionHandler.PingMinimumOfRegions(this.OnRegionPingCompleted, null);\r}\r// callback function\rprivate void OnRegionPingCompleted(RegionHandler regionHandler){}\r  讀取各地區的ping值 接續上一步，從回傳的方法得到的RegionHandler已記錄了各地區的ping值，此時就可以讀取並顯示各地區的ping值讓玩家決定連線的地區伺服器。\n1 2 3 4 5 6 7 8 9 10 11  private void OnRegionPingCompleted (RegionHandler regionHandler)\r{\rint countRegion = regionHandler.EnabledRegions.Count;\rfor (int i = 0; i \u0026lt; countRegion; i++)\r{\rDebug.Log (regionHandler.EnabledRegions[i].Code + \u0026#34;: \u0026#34; + regionHandler.EnabledRegions[i].Ping);\r}\rDebug.Log (\u0026#34;BestRegion: \u0026#34; + regionHandler.BestRegion);\rDebug.Log (\u0026#34;RegionPingSummary: \u0026#34; + regionHandler.SummaryToCache);\r}\r  輸出結果：\neu: 300\rus: 217\rusw: 166\rcae: 274\rasia: 70\rjp: 50\rau: 177\rsa: 334\rin: 113\rru: 307\rrue: 231\rkr: 107\rza: 389\rBestRegion: jp[5.8.70.143:5055]: 50ms RegionPingSummary: jp;50;asia,au,cae,eu,in,jp,kr,ru,rue,sa,us,usw,za\r選擇地區伺服器 現在玩家知道了所有地區的ping值大小，最後一步就是連上地區伺服器，此時只要在玩家選擇地區的方法中傳入地區參數region並調用ConnectToRegionMaster即可。\n1  PhotonNetwork.NetworkingClient.ConnectToRegionMaster(region);\r  當然，如果想讓玩家直接選一個最快的伺服器可以直接在OnRegionPingCompleted調用ConnectToRegionMaster：\n1 2 3 4  private void OnRegionPingCompleted (RegionHandler regionHandler)\r{\rPhotonNetwork.NetworkingClient.ConnectToRegionMaster(regionHandler.BestRegion.Code);\r}\r  注意事項 根據經驗，使用BestRegion連接地區伺服器，在台灣有時候會連到jp或asia甚至rue三個不同的地區伺服器，而不同地區伺服器的玩家是無法共同進行遊戲的！\n透過PhotonServerSettings設定Fixed Region並透過ConnectUsingSettings連線，可確保連線至固定的地區伺服器。\n","description":"如果你不想要讓Photon直接判斷連接地區可以參考咱的研究","id":11,"section":"posts","tags":["Photon","NameServer","Networking"],"title":"PUN2實作玩家自選地區進行連線","uri":"https://ilyusha71.github.io/posts/pun2-nameserver-region/"},{"content":"實作環境  Unity2018.3.0f2 PUN 2.17 Photon lib 4.1.3.0  如果還沒加入PUN2可以參考上一篇，PUN2 快速上手\nAPI Photon.Realtime API Connect() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  public virtual bool Connect()\r{\rthis.DisconnectedCause = DisconnectCause.None;\r#if UNITY_WEBGL\r SocketWebTcp.SerializationProtocol = Enum.GetName(typeof(SerializationProtocol), this.LoadBalancingPeer.SerializationProtocolType);\r#endif\r\rif (this.LoadBalancingPeer.Connect(this.MasterServerAddress, this.AppId, this.TokenForInit))\r{\rthis.State = ClientState.ConnectingToMasterServer;\rreturn true;\r}\r#if UNITY_XBOXONE\r if (this.AuthValues == null || this.AuthValues.AuthType != CustomAuthenticationType.Xbox)\r{\rUnityEngine.Debug.LogError(\u0026#34;UNITY_XBOXONE builds must set AuthValues.AuthType to \\\u0026#34;CustomAuthenticationType.Xbox\\\u0026#34;. Set this before calling any Connect method. Connect failed!\u0026#34;);\rreturn false;\r}\r#endif\r\rreturn false;\r}\r  Connect可以直接連到主伺服器（MasterServer），調用此方法前必須先設定AppId與MasterServerAddress，如果使用Photon Cloud則應該使用ConnectToRegionMaster。\n1  PhotonNetwork.NetworkingClient.Connect();\r  ConnectToNameServer() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  public bool ConnectToNameServer()\r{\rthis.IsUsingNameServer = true;\rthis.CloudRegion = null;\r#if UNITY_WEBGL\r SocketWebTcp.SerializationProtocol = Enum.GetName(typeof(SerializationProtocol), this.LoadBalancingPeer.SerializationProtocolType);\r#endif\r\rif (this.AuthMode == AuthModeOption.AuthOnceWss)\r{\rthis.ExpectedProtocol = this.LoadBalancingPeer.TransportProtocol;\rthis.LoadBalancingPeer.TransportProtocol = ConnectionProtocol.WebSocketSecure;\r}\rif (!this.LoadBalancingPeer.Connect(this.NameServerAddress, \u0026#34;NameServer\u0026#34;, this.TokenForInit))\r{\rreturn false;\r}\rthis.State = ClientState.ConnectingToNameServer;\rreturn true;\r}\r  ConnectToNameServer可以直接連到名稱伺服器，調用此方法前必須先設定AppId與NameServerHost。\n實作 1 2 3 4 5 6 7  // 自定義連線方法\rvoid ConnectToServer()\r{\rPhotonNetwork.NetworkingClient.AppId = PhotonNetwork.PhotonServerSettings.AppSettings.AppIdRealtime;\rPhotonNetwork.NetworkingClient.NameServerHost = \u0026#34;ns.photonengine.cn\u0026#34;; // 如果不指定，預設會是 ns.exitgames.com\r PhotonNetwork.NetworkingClient.ConnectToNameServer();\r}\r  執行後，PUN會開始連線（StatusCode.Connect）並建立加密（StatusCode.EncryptionEstablished）。\n1  virtual void OnStatusChanged (StatusCode statusCode)\r  從內部狀態方法可發現，在加密完成後，會調用OpGetRegions方法取得名稱伺服器下的地區列表，這份列表儲存在RegionHandler類裡面。\n1 2 3 4 5 6 7 8 9 10  private bool OpGetRegions ()\r{\rif (!this.CheckIfOpCanBeSent (OperationCode.GetRegions, this.Server, \u0026#34;GetRegions\u0026#34;))\r{\rreturn false;\r}\rbool sent = this.LoadBalancingPeer.OpGetRegions (this.AppId);\rreturn sent;\r}\r  最後由OnRegionListReceived接收回傳的RegionHandler。\n1 2 3 4 5 6 7 8 9  public void OnRegionListReceived (RegionHandler regionHandler)\r{\rthis.UpdateCallbackTargets ();\rforeach (IConnectionCallbacks target in this)\r{\rtarget.OnRegionListReceived (regionHandler);\r}\r}\r  ConnectToRegionMaster() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  public bool ConnectToRegionMaster(string region)\r{\rthis.IsUsingNameServer = true;\rif (this.State == ClientState.ConnectedToNameServer)\r{\rthis.CloudRegion = region;\rreturn this.CallAuthenticate();\r}\rthis.LoadBalancingPeer.Disconnect();\rthis.CloudRegion = region;\r#if UNITY_WEBGL\r SocketWebTcp.SerializationProtocol = Enum.GetName(typeof(SerializationProtocol), this.LoadBalancingPeer.SerializationProtocolType);\r#endif\r\rif (this.AuthMode == AuthModeOption.AuthOnceWss)\r{\rthis.ExpectedProtocol = this.LoadBalancingPeer.TransportProtocol;\rthis.LoadBalancingPeer.TransportProtocol = ConnectionProtocol.WebSocketSecure;\r}\rif (!this.LoadBalancingPeer.Connect(this.NameServerAddress, \u0026#34;NameServer\u0026#34;, null))\r{\rreturn false;\r}\rthis.State = ClientState.ConnectingToNameServer;\rreturn true;\r}\r  ConnectToRegionMaster可透過region參數，連到指定地區的伺服器，調用此方法前必須先設定AppId與NameServerHost。\n實作 1 2 3 4 5 6 7 8  // 自定義連線方法\rvoid ConnectToServer()\r{\rstring region = \u0026#34;asia\u0026#34;; // 指定地區\r PhotonNetwork.NetworkingClient.AppId = PhotonNetwork.PhotonServerSettings.AppSettings.AppIdRealtime;\rPhotonNetwork.NetworkingClient.NameServerHost = \u0026#34;ns.photonengine.cn\u0026#34;; // 如果不指定，預設會是 ns.exitgames.com\r PhotonNetwork.NetworkingClient.ConnectToRegionMaster(region);\r}\r  ","description":"如果想自行設計遊戲登入的方法與遊戲大廳就看下去吧！","id":12,"section":"posts","tags":["Photon","Networking"],"title":"PUN2 Realtime API 筆記","uri":"https://ilyusha71.github.io/posts/pun2-realtime-api-note/"},{"content":"實作環境  Unity2018.3.0f2 PUN 2.17 Photon lib 4.1.3.0  下載最新版PUN2 以下的設置與代碼使用PUN2，PUN舊版並不適用請注意！\n先到Asset Store下載PUN 2 - FREE\n創建PUN專案 連上Photon Cloud建立新的應用程式，在Photon Type選擇Photon Realtime。\n你可以在Photon Cloud的應用程式找到剛剛建立的應用程式，並複製應用程式 ID，這段ID的格式應該長成這樣：\n1267d507-645b-4121-b3a7-d15b09158bc1\r設定PUN專案 回到Unity，打開PUN Wizard：\n功能列=\u0026gt;Windows=\u0026gt;Photon Unity Networking=\u0026gt;PUN Wizard\n選擇Locate PhotonServerSettings，會出現下面的視窗（或在Inspector中顯示）。\n App Id Reatime填入Photon Cloud應用程式的ID Use Name Server打勾 Fixed Region選填，可用作快速登錄的地區  快速測試  在Project搜尋DemoAsteroids-LobbyScene與DemoAsteroids-GameScene兩個場景檔或透過以下路徑。  Assets\\Photon\\PhotonUnityNetworking\\Demos\\DemoAsteroids   打開Build Settings：  功能列=\u0026gt;Build Settings... 熱鍵：CTRL + SHIFT + B   將場景檔拖曳到Scenes In Build，並將DemoAsteroids-LobbyScene移到首位。  以上，PUN的快速設定基本完成，可以Build並進行測試！\n","description":"第一次使用Photon做網路遊戲就上手","id":13,"section":"posts","tags":["Photon","Networking"],"title":"PUN2 快速上手","uri":"https://ilyusha71.github.io/posts/pun2-test/"},{"content":"注意！以下內容均在Win 10環境下操作，其他作業系統的操作方式並不相同。\n安裝Chocolatey Chocolatey是Windows下的軟件管理器，很多軟件都能直接安裝。\n在Win 10安裝Chocolatey有兩種方式：\n使用Powershell安裝 在Win 10左下角的搜尋輸入powershell就能找到Windows PowerShell。\n記得以系統管理員身份執行。\n1  Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(\u0026#39;https://chocolatey.org/install.ps1\u0026#39;))\r  使用命令提示字元 / 命令提示符 在Win 10左下角的搜尋輸入cmd打開命令提示字元。\n記得以系統管理員身份執行。\n1  @\u0026#34;%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\u0026#34; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \u0026#34;iex ((New-Object System.Net.WebClient).DownloadString(\u0026#39;https://chocolatey.org/install.ps1\u0026#39;))\u0026#34; \u0026amp;\u0026amp; SET \u0026#34;PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\u0026#34;\r  安裝Git與Hugo 安裝完Chocolatey之後，接下來的安裝就很方便，直接重新開啟PowerShell，輸入：\n1  choco install git.install\r  1  choco install hugo\r  有些較為複雜的Hugo主題會使用Sass/SCSS，此時必須要再安裝Hugo的擴展。\n1  choco install hugo-extended\r  Hugo建立網站 通過cd指令到你要建站的目錄，然後輸入：\n1  hugo new site \u0026lt;你的網站名稱\u0026gt;\r  安裝主題 進到網站根目錄，在Hugo Theme挑選喜歡的主題，不同主題安裝方法略有差異。\n基本設置如下：\n1 2  git init\rgit submodule add \u0026lt;主題網址.git\u0026gt; themes/\u0026lt;主題名稱\u0026gt;\r  主題設置與測試 關於設置主題的部分，每個主題都有自己的一套配置方法，詳見各主題的網站與github。以下為大多數主題的基本設置：\n 進入theme/主題資料夾/exampleSite（不是所有主題都有exampleSite這個資料夾） 在exampleSite找到config.toml複製一份至根目錄。 為方便測試，可以把content資料夾也複製到根目錄。  進階設置 部分主題需要到theme/主題資料夾複製Static與Layout的內容或整個資料夾至根目錄才能正常顯示。\n測試 透過下面的指令會啟動本地端的網站，在網址列輸入localhost:1313/即可預覽。\n1 2 3  hugo server\r// 若之後的修改要完全刷新預覽可以改成\rhugo server --disableFastRender\r  網站發佈到Github 網站發佈 透過指令下面的指令會生成一個public的資料夾，這個資料夾就是要發佈到Github的內容。\n1  hugo\r  網站發佈前要先把config.toml的baseURL與manifest.json的start_url換成Github使用的網址，確保網站的各項參數能關聯到正確的地址。\nPush到Github 先移動到public資料夾，輸入指令：\n1 2 3 4  git init\rgit add .\rgit commit -m \u0026#34;init\u0026#34;\rgit push origin master\r  ","description":"速成架站與經驗整理","id":14,"section":"posts","tags":["hugo"],"title":"在Windows使用Hugo在Github架設網站","uri":"https://ilyusha71.github.io/posts/github-hugo-website/"},{"content":"角色卡品質 角色卡存在兩種品質，グレード（Grade）與レベル（Level）：\nグレード，以下稱作等，分為S、A、B、C四等。\nレベル，以下稱作級，在【等】之下分為Lv1至Lv10十級。\n角色卡提升品質 角色卡可以透過收集其他同角色的卡片進行品質的提升。\n グレードアップ，以下稱作升等。 レベルアップ，以下稱作升級。  升等條件  角色卡要進行升等必須先升級到Lv10。  升等花費 \r\rダイヤ，哆啦A夢公園的氪金通貨\n以下稱作鑽石。\r\r\r 角色卡升等的花費只與角色卡的等有關。  C等卡升等為B等卡，需要花費2顆鑽石。    升級條件  角色卡升級僅需要任何一張相同角色的卡片即可進行升級。 角色卡升級消耗的角色卡，以下稱作材料卡。  升級花費 \r\rドラやきメダル，哆啦A夢公園的主要通貨\n以下稱作銅鑼燒獎章。\r\r\r 角色卡升級的花費只與角色卡的等有關。  C等卡升級每消耗一張材料卡需要花費5枚銅鑼燒獎章。 B等卡升級每消耗一張材料卡需要花費15枚銅鑼燒獎章。 A等卡升級每消耗一張材料卡需要花費30枚銅鑼燒獎章。    升級經驗  角色卡升級的經驗只與材料卡的等有關。 角色卡使用同等的材料卡升級，每一張提升1級。 角色卡使用不同等的材料卡升級，提升等級如下：  C等卡使用B等卡升級，每一張提升9級，兩張滿級。 C等卡使用A等卡升級，每一張提升10級，一張滿級。 B等卡使用C等卡升級，每一張提升12.5%，八張升一級。 B等卡使用A等卡升級，每一張提升7級，兩張滿級。 A等卡使用C等卡升級，每一張提升1%。    所以直接使用低等的材料卡升級，要比將低等卡升等後再升級更划算。\n","description":"角色卡的升級筆記","id":15,"section":"posts","tags":null,"title":"哆啦A夢公園角色卡品質資訊","uri":"https://ilyusha71.github.io/posts/doraemon-park-upgrade/"},{"content":"開發前 本次的項目是在兒童樂園I店建置大型迷宮密室，內部由大量隔間組成，每道門都配有RFID射頻識別門鎖。在遊戲設計初期（2020年1月）考慮納入計時功能來限制玩家在各關卡的挑戰時間，但尚未實際討論過實作的問題。2月中開發清單增加了DS3231時鐘模組（之後會補充記錄這部分的開發問題）來處理計時的功能，DS3231使用I2C傳輸可以提供多個Arduino在時間記錄上的參考，但隨之而來的問題是I店場域很大，I2C無法提供長距離的穩定通訊，在研究了RS232、RS485、CAN等有線長距離傳輸的姿勢後，在龐大的佈線壓力下（還有就是場域要連網的設備基數太多），還是決定使用無線通訊，早期也曾考慮過使用但是當時公司只有大量的便宜貨FS1000A與 MX-RM-5V，這個在前年曾經使用過，但傳輸距離頂多2米，超過2米之後傳輸的速率大幅下降，而且組成是一對發射器與接收器，顯然會大量增加連接的裝置。最終決定使用本文的主角HC12遠距無線通訊模組！\n開發學習 簡單研究了HC12的使用與FS1000A，除了HC12收發一體之外，代碼在讀寫控制上並無太多區別，而相比I2C的通訊需要區分主從設備並在發送與接收的過程需要對答來看，HC12顯然要方便許多。\nHC12的基本設置 靚照 配線 配線的基本原則：\n HC12 VCC \u0026mdash; 5V Arduino HC12 GND \u0026mdash; GND Arduino HC12 RX  \u0026mdash; TX  Arduino HC12 TX  \u0026mdash; RX Arduino\n在本次的開發項目中，大多數的設備第10~13腳已經被RFID的SPI介面使用了，第5~7腳則作為蜂鳴器與繼電器的輸出，所以HC12對接的RX（接收）TX（傳送）設定為第2與第3腳，以下是代碼中的設定，使用HC12必須引入SoftwareSerial庫。\n1 2  #include \u0026lt;SoftwareSerial.h\u0026gt;\rSoftwareSerial HC12(2, 3); // HC-12 TX Pin, HC-12 RX Pin   \n參考了網上資料，在HC12的電源正負端最好配上22µF至1mF的去耦電容，而在電源正極之前串聯一顆1N4007二極體。  安裝 測試 基本上兩塊Arduino各自配置HC12後就可以使用下面的代碼進行雙向傳輸\n1 2 3 4 5 6 7 8  void loop() {\rwhile (HC12.available()) { // If HC-12 has data\r Serial.write(HC12.read()); // Send the data to Serial monitor\r }\rwhile (Serial.available()) { // If Serial monitor has data\r HC12.write(Serial.read()); // Send that data to HC-12\r }\r}  \n參考來源 基于Arduino开发板使用HC-12远程无线通信模块\n","description":"第一天使用HC12就上手","id":16,"section":"posts","tags":["Arduino","HC12","無線通訊"],"title":"HC12遠距無線通訊模組開發記錄 Part.1","uri":"https://ilyusha71.github.io/posts/hc12-development/"},{"content":"關注 銅鑼燒實驗牧場\n伊琉沙/ PC實測/哆啦A夢牧場物語\n關於好感度的計算，我從源代碼反編譯找到了。\n結果跟之前自己實機測試結果一致。\n只是程式碼的所有數值計算比我的推測精確5倍！！！\n好感度的獲取方式與對應積分  打招呼 (GREET)  +5分   對話 (TALK)  +25分   送禮物 (PRESENT)  +5分   送喜好的禮物（會冒出3♥） (GOOD_PRESENT)  +25分   送最愛的禮物（會冒出5♥） (FAVORITE_PRESENT)  +60分   送討厭的禮物 (BAD_PRESENT)  -10分   參與慶典 (PARTICIPATE_FESTIVAL)  +10分    好感度積分 再來是好感度的基本分，從源代碼發現人物角色與野生動物的好感度標準分是不同的，這也是為什麼野生動物的好感度比較容易上升。\n人物角色  1♥  0分   2♥  100分   3♥  400分   4♥  900分   5♥  1700分   6♥  2800分   7♥  4200分   8♥  5900分   9♥  7900分   10♥  10000分    野生動物  1♥  0分   2♥  100分   3♥  200分   4♥  400分   5♥  700分   6♥  1100分   7♥  1700分   8♥  2600分   9♥  3800分   10♥  5000分    ","description":"好感度的累積方法以及各等級好感度的所需積分","id":17,"section":"posts","tags":null,"title":"【哆啦A夢牧場物語】NPC與動物與大雄的好感度","uri":"https://ilyusha71.github.io/posts/doraemon-story-likabilitydegree/"},{"content":"選擇合適的字體 Step 1 前往Goole Fonts網站 Goole Fonts\nStep 2 選擇語言 中文的部分除了繁體與簡體之外還有支援香港字形。\n按照習慣選擇 Chinese (Traditional)。\nStep 3 選擇字體 目前繁體字體只提供下列兩種字體：\n Noto Sans TC（思源黑體） Noto Serif TC（思源宋體）\n進入字體頁面可以輸入內容看看預覽效果，調整大小與粗細。  Step 4 產生樣式 調整完成點選網站右上角的 SELECT THIS FONT，會在右下角跳出樣式窗口，在此窗口還可以在 CUSTOMIZE 進一步設置樣式支援的粗細與語系。\n設定Google Fonts 標準設置 在 STANDARD 應該會出現類似下面代碼的樣式：\n1  \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css?family=Noto+Sans+TC\u0026amp;display=swap\u0026amp;subset=chinese-traditional\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt;  \n將這段代碼複製到網站的 [head] 與 [/head] 之間。\n@import設置 切換 @import會出現：\n1  @import url(\u0026#39;https://fonts.googleapis.com/css?family=Noto+Sans+TC\u0026amp;display=swap\u0026amp;subset=chinese-traditional\u0026#39;);  \n將 @import 這段放入 [style] 與 [/style] 之間。\nzzo主題設置 在zzo主題設置上僅需要兩個步驟，此處以 Noto Sans TC 為例：\n修改 font.toml 在 root/data/font.toml 這個位置找到 font.toml ，修改預設字體內容：\n1 2  title_font = \u0026#34;\\\u0026#34;Noto Sans TC\\\u0026#34;, sans-serif\u0026#34;\rcontent_font = \u0026#34;\\\u0026#34;Noto Sans TC\\\u0026#34;, serif\u0026#34;  \n添加修改head 在 root/layouts/partials/head/custom-head.html 這個位置找到 custom-head.htm ，加載下列樣式。\n1  \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css?family=Noto+Sans+TC\u0026amp;display=swap\u0026amp;subset=chinese-traditional\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt;  \n","description":"Google Fonts雲端字體的設定與使用","id":19,"section":"posts","tags":["font"],"title":"在網站中使用Google Fonts","uri":"https://ilyusha71.github.io/posts/google-font-setting/"},{"content":"Markdownify box This is boxmd shortcode Simple box This is **box** shortcode\r Code tabs Make it easy to switch between different code\njava\rjavascript\r\r1  System.out.println(\u0026#39;Hello World!\u0026#39;);\r  \r\r1  console.log(\u0026#39;Hello World!\u0026#39;);\r  \r\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"c3a7395d19726e47\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar codetabLinks = null;\rvar codetabContents = null;\rvar ids = [];\rif (containerElem) {\rcodetabLinks = containerElem.querySelectorAll('.codetab__link');\rcodetabContents = containerElem.querySelectorAll('.codetab__content');\r}\rfor (var i = 0; i 0) {\rcodetabContents[0].style.display = 'block';\r}\r Tabs for general purpose Windows\rMacOS\rUbuntu\r\rWindows section 1  console.log(\u0026#39;Hello World!\u0026#39;);\r  ⚠️Becareful that the content in the tab should be different from each other. The tab makes unique id hashes depending on the tab contents. So, If you just copy-paste the tabs with multiple times, since it has the same contents, the tab will not work.\n\rMacOS section Hello world!\r\rUbuntu section Great!\r\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"5c92b60c8ec7870a\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar tabLinks = null;\rvar tabContents = null;\rvar ids = [];\rif (containerElem) {\rtabLinks = containerElem.querySelectorAll('.tab__link');\rtabContents = containerElem.querySelectorAll('.tab__content');\r}\rfor (var i = 0; i 0) {\rtabContents[0].style.display = 'block';\r}\r Expand \r\rExpand me\r\rTitle contents\r\r \r\rExpand me2\r\rTitle2 contents2\r\r Alert Colored box\nthis is a text\rthis is a text\rthis is a text\rthis is a text\rNotice success text\r info text\r warning text\r error text\r ","description":"tabs, code-tabs, expand, alert, warning, notice, img, box","id":20,"section":"posts","tags":["shortcode"],"title":"Shortcodes","uri":"https://ilyusha71.github.io/posts/shortcodes/"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn: Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","description":"Sample article showcasing basic Markdown syntax and formatting for HTML elements.","id":21,"section":"posts","tags":["markdown","css","html","themes"],"title":"Markdown Syntax Guide","uri":"https://ilyusha71.github.io/posts/markdown-syntax/"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nInstagram Simple Shortcode .__h_instagram.card { font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; font-size: 14px; border: 1px solid rgb(219, 219, 219); padding: 0; margin-top: 30px; } .__h_instagram.card .card-header, .__h_instagram.card .card-body { padding: 10px 10px 10px; } .__h_instagram.card img { width: 100%; height: auto; }  koloot.design   View More on Instagram   YouTube Privacy Enhanced Shortcode   Twitter Simple Shortcode .twitter-tweet { font: 14px/1.45 -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; border-left: 4px solid #2b7bb9; padding-left: 1.5em; color: #555; } .twitter-tweet a { color: #2b7bb9; text-decoration: none; } blockquote.twitter-tweet a:hover, blockquote.twitter-tweet a:focus { text-decoration: underline; }  “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }  ","description":"A brief description of Hugo Shortcodes","id":22,"section":"posts","tags":["shortcodes","privacy"],"title":"Rich Content","uri":"https://ilyusha71.github.io/posts/rich-content/"},{"content":"Code Syntax Highlighting Verify the following code blocks render as code blocks and highlight properly.\nMore about tuning syntax highlighting is the Hugo documentation.\nDiff 1 2 3 4 5 6 7 8 9 10  *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39;\r--- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39;\r***************\r*** 1 ****\r! This is a line.\r--- 1 ---\r! This is a replacement line.\rIt is important to spell\r-removed line\r+new line\r  *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39;\r--- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39;\r***************\r*** 1 ****\r! This is a line.\r--- 1 ---\r! This is a replacement line.\rIt is important to spell\r-removed line\r+new line\rMakefile CC=gcc\rCFLAGS=-I.\rhellomake: hellomake.o hellofunc.o\r$(CC) -o hellomake hellomake.o hellofunc.o -I.\r1 2 3 4 5  CC=gcc\rCFLAGS=-I.\rhellomake: hellomake.o hellofunc.o\r$(CC) -o hellomake hellomake.o hellofunc.o -I.\r  JSON 1 2 3  {\u0026#34;employees\u0026#34;:[\r{\u0026#34;firstName\u0026#34;:\u0026#34;John\u0026#34;, \u0026#34;lastName\u0026#34;:\u0026#34;Doe\u0026#34;},\r]}\r  Markdown 1 2 3  **bold** *italics* [link](www.example.com)\r  JavaScript 1  document.write(\u0026#39;Hello, world!\u0026#39;);\r  CSS 1 2 3  body {\rbackground-color: red;\r}\r  Objective C 1 2 3 4 5 6  #import \u0026lt;stdio.h\u0026gt;\r\rint main (void)\r{\rprintf (\u0026#34;Hello world!\\n\u0026#34;);\r}\r  Python 1  print \u0026#34;Hello, world!\u0026#34;\r  XML 1 2 3 4 5  \u0026lt;employees\u0026gt;\r\u0026lt;employee\u0026gt;\r\u0026lt;firstName\u0026gt;John\u0026lt;/firstName\u0026gt; \u0026lt;lastName\u0026gt;Doe\u0026lt;/lastName\u0026gt;\r\u0026lt;/employee\u0026gt;\r\u0026lt;/employees\u0026gt;\r  Perl 1  print \u0026#34;Hello, World!\\n\u0026#34;;\r  Bash 1  echo \u0026#34;Hello World\u0026#34;\r  PHP 1  \u0026lt;?php echo \u0026#39;\u0026lt;p\u0026gt;Hello World\u0026lt;/p\u0026gt;\u0026#39;; ?\u0026gt;   CoffeeScript 1  console.log(“Hello world!”);\r  C# 1 2 3 4 5 6 7 8  using System;\rclass Program\r{\rpublic static void Main(string[] args)\r{\rConsole.WriteLine(\u0026#34;Hello, world!\u0026#34;);\r}\r}\r  C++ 1 2 3 4 5 6 7  #include \u0026lt;iostream.h\u0026gt;\r\rmain()\r{\rcout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34;;\rreturn 0;\r}\r  SQL 1 2  SELECT column_name,column_name\rFROM table_name;\r  Go 1 2 3 4 5  package main\rimport \u0026#34;fmt\u0026#34;\rfunc main() {\rfmt.Println(\u0026#34;Hello, 世界\u0026#34;)\r}\r  Ruby 1  puts \u0026#34;Hello, world!\u0026#34;\r  Java 1 2 3 4 5 6 7 8 9 10 11 12  import javax.swing.JFrame; //Importing class JFrame\rimport javax.swing.JLabel; //Importing class JLabel\rpublic class HelloWorld {\rpublic static void main(String[] args) {\rJFrame frame = new JFrame(); //Creating frame\r frame.setTitle(\u0026#34;Hi!\u0026#34;); //Setting title frame\r frame.add(new JLabel(\u0026#34;Hello, world!\u0026#34;));//Adding text to frame\r frame.pack(); //Setting size to smallest\r frame.setLocationRelativeTo(null); //Centering frame\r frame.setVisible(true); //Showing frame\r }\r}\r  Latex Equation 1  \\frac{d}{dx}\\left( \\int_{0}^{x} f(u)\\,du\\right)=f(x).\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  import {x, y} as p from \u0026#39;point\u0026#39;;\rconst ANSWER = 42;\rclass Car extends Vehicle {\rconstructor(speed, cost) {\rsuper(speed);\rvar c = Symbol(\u0026#39;cost\u0026#39;);\rthis[c] = cost;\rthis.intro = `This is a car runs at\r${speed}.`;\r}\r}\rfor (let num of [1, 2, 3]) {\rconsole.log(num + 0b111110111);\r}\rfunction $initHighlight(block, flags) {\rtry {\rif (block.className.search(/\\bno\\-highlight\\b/) != -1)\rreturn processBlock(block.function, true, 0x0F) + \u0026#39; class=\u0026#34;\u0026#34;\u0026#39;;\r} catch (e) {\r/* handle exception */\rvar e4x =\r\u0026lt;div\u0026gt;Example\r\u0026lt;p\u0026gt;1234\u0026lt;/p\u0026gt;\u0026lt;/div\u0026gt;;\r }\rfor (var i = 0 / 2; i \u0026lt; classes.length; i++) {\r// \u0026#34;0 / 2\u0026#34; should not be parsed as regexp\r if (checkCondition(classes[i]) === undefined)\rreturn /\\d+[\\s/]/g;\r}\rconsole.log(Array.every(classes, Boolean));\r}\rexport $initHighlight;\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;Hello world\u0026lt;/title\u0026gt;\r\u0026lt;link href=\u0026#39;http://fonts.googleapis.com/css?family=Roboto:400,400italic,700,700italic\u0026#39; rel=\u0026#39;stylesheet\u0026#39; type=\u0026#39;text/css\u0026#39;\u0026gt;\r\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;index.css\u0026#34; /\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;script src=\u0026#34;//cdnjs.cloudflare.com/ajax/libs/less.js/2.5.1/less.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script src=\u0026#34;vendor/prism.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script src=\u0026#34;examples.bundle.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  /*********************************************************\r* General\r*/\rpre[class*=\u0026#34;language-\u0026#34;],\rcode {\rcolor: #5c6e74;\rfont-size: 13px;\rtext-shadow: none;\rfont-family: Consolas, Monaco, \u0026#39;Andale Mono\u0026#39;, \u0026#39;Ubuntu Mono\u0026#39;, monospace;\rdirection: ltr;\rtext-align: left;\rwhite-space: pre;\rword-spacing: normal;\rword-break: normal;\rline-height: 1.5;\rtab-size: 4;\rhyphens: none;\r}\rpre[class*=\u0026#34;language-\u0026#34;]::selection,\rcode::selection {\rtext-shadow: none;\rbackground: #b3d4fc;\r}\r@media print {\rpre[class*=\u0026#34;language-\u0026#34;],\rcode {\rtext-shadow: none;\r}\r}\rpre[class*=\u0026#34;language-\u0026#34;] {\rpadding: 1em;\rmargin: .5em 0;\roverflow: auto;\rbackground: #f8f5ec;\r}\r:not(pre) \u0026gt; code {\rpadding: .1em .3em;\rborder-radius: .3em;\rcolor: #db4c69;\rbackground: #f9f2f4;\r}\r  ","description":"Syntax highlighting test","id":23,"section":"posts","tags":["hugo"],"title":"Syntax highlighting","uri":"https://ilyusha71.github.io/posts/syntax-highlight/"},{"content":"We need goldmark katex entension which is not yet we have: [https://github.com/gohugoio/hugo/issues/6544](https://github.com/gohugoio/hugo/issues/6544)\r Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }}\r{{ partial \u0026quot;math.html\u0026quot; . }}\r{{ end }}\r To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files.  Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $$ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $$\nBlock math:\n$$\n\\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","description":"A brief guide to setup KaTeX","id":24,"section":"posts","tags":null,"title":"Math Typesetting","uri":"https://ilyusha71.github.io/posts/math-typesetting/"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3  .emoji {\rfont-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols;\r}  ","description":"Guide to emoji usage in Hugo","id":25,"section":"posts","tags":["emoji","gamoji","namoji","bamoji","amoji"],"title":"Emoji Support","uri":"https://ilyusha71.github.io/posts/emoji-support/"},{"content":"digraph G {\rsubgraph cluster_0 {\rstyle=filled;\rcolor=lightgrey;\rnode [style=filled,color=white];\ra0 -\u0026gt; a1 -\u0026gt; a2 -\u0026gt; a3;\rlabel = \u0026quot;process #1\u0026quot;;\r}\rsubgraph cluster_1 {\rnode [style=filled];\rb0 -\u0026gt; b1 -\u0026gt; b2 -\u0026gt; b3;\rlabel = \u0026quot;process #2\u0026quot;;\rcolor=blue\r}\rstart -\u0026gt; a0;\rstart -\u0026gt; b0;\ra1 -\u0026gt; b3;\rb2 -\u0026gt; a3;\ra3 -\u0026gt; a0;\ra3 -\u0026gt; end;\rb3 -\u0026gt; end;\rstart [shape=Mdiamond];\rend [shape=Msquare];\r}\r","description":"A hack to put Graphviz on the web.","id":26,"section":"posts","tags":[""],"title":"Viz support","uri":"https://ilyusha71.github.io/posts/test-viz/"},{"content":"{ \u0026quot;signal\u0026quot;: [ {\u0026quot;name\u0026quot;: \u0026quot;CLK\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;p.....|...\u0026quot;},\r{\u0026quot;name\u0026quot;:\u0026quot;DAT\u0026quot;, \u0026quot;wave\u0026quot;:\u0026quot;x.345x|=.x\u0026quot;, \u0026quot;data\u0026quot;:[\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;,\u0026quot;D\u0026quot;]},\r{\u0026quot;name\u0026quot;: \u0026quot;REQ\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;0.1..0|1.0\u0026quot;},\r{},\r{\u0026quot;name\u0026quot;: \u0026quot;ACK\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;1.....|01.\u0026quot;}\r]}\r","description":"WaveDrom is a Free and Open Source online digital timing diagram (waveform) rendering engine that uses javascript, HTML5 and SVG to convert a WaveJSON input text description into SVG vector graphics.","id":27,"section":"posts","tags":[""],"title":"Wavedrom support","uri":"https://ilyusha71.github.io/posts/test-wavedrom/"},{"content":"{\r\u0026quot;type\u0026quot;: \u0026quot;bar\u0026quot;,\r\u0026quot;data\u0026quot;: {\r\u0026quot;labels\u0026quot;: [\u0026quot;One\u0026quot;, \u0026quot;Two\u0026quot;, \u0026quot;Three\u0026quot;, \u0026quot;Four\u0026quot;, \u0026quot;Five\u0026quot;, \u0026quot;Six\u0026quot;],\r\u0026quot;datasets\u0026quot;: [{\r\u0026quot;label\u0026quot;: \u0026quot;# of Votes\u0026quot;,\r\u0026quot;data\u0026quot;: [12, 19, 3, 5, 3, 8]\r}]\r}\r}\r{\r\u0026quot;type\u0026quot;: \u0026quot;line\u0026quot;,\r\u0026quot;data\u0026quot;: {\r\u0026quot;labels\u0026quot;: [\u0026quot;One\u0026quot;, \u0026quot;Two\u0026quot;, \u0026quot;Three\u0026quot;, \u0026quot;Four\u0026quot;, \u0026quot;Five\u0026quot;, \u0026quot;Six\u0026quot;],\r\u0026quot;datasets\u0026quot;: [\r{\r\u0026quot;label\u0026quot;: \u0026quot;# of Votes\u0026quot;,\r\u0026quot;data\u0026quot;: [12, 19, 3, 5, 2, 3],\r\u0026quot;backgroundColor\u0026quot;:\u0026quot;transparent\u0026quot;,\r\u0026quot;borderColor\u0026quot;:\u0026quot;orange\u0026quot;\r},\r{\r\u0026quot;label\u0026quot;: \u0026quot;Some other set\u0026quot;,\r\u0026quot;data\u0026quot;: [15, 8, 13, 5, 5, 9],\r\u0026quot;backgroundColor\u0026quot;:\u0026quot;transparent\u0026quot;,\r\u0026quot;borderColor\u0026quot;:\u0026quot;#44ccff\u0026quot;\r}\r]\r}\r}\r","description":"Simple yet flexible JavaScript charting for designers \u0026 developers","id":28,"section":"posts","tags":[""],"title":"Chart support","uri":"https://ilyusha71.github.io/posts/test-chartjs/"},{"content":"Alice-\u0026gt;Bob: Hello Bob, how are you?\rNote right of Bob: Bob thinks\rBob--\u0026gt;Alice: I am good thanks!\rTitle: Here is a title\rA-\u0026gt;B: Normal line\rB--\u0026gt;C: Dashed line\rC-\u0026gt;\u0026gt;D: Open arrow\rD--\u0026gt;\u0026gt;A: Dashed open arrow\r","description":"Generates UML sequence diagrams from simple text","id":29,"section":"posts","tags":[""],"title":"JS Sequence Diagram support","uri":"https://ilyusha71.github.io/posts/test-js-sequence-diagrams/"},{"content":"graph TD;\rA--\u0026gt;B;\rA--\u0026gt;C;\rB--\u0026gt;D;\rC--\u0026gt;D;\rsequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail...\rJohn--\u0026gt;Alice: Great!\rJohn-\u0026gt;Bob: How about you?\rBob--\u0026gt;John: Jolly good!\rgraph TD\rA[Hard] --\u0026gt;|Text| B(Round)\rB --\u0026gt; C{Decision}\rC --\u0026gt;|One| D[Result 1]\rC --\u0026gt;|Two| E[Result 2]\rgantt\rsection Section\rCompleted :done, des1, 2014-01-06,2014-01-08\rActive :active, des2, 2014-01-07, 3d\rParallel 1 : des3, after des1, 1d\rParallel 2 : des4, after des1, 1d\rParallel 3 : des5, after des3, 1d\rParallel 4 : des6, after des4, 1d\rclassDiagram\rClass01 \u0026lt;|-- AveryLongClass : Cool\r\u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01\rClass09 --\u0026gt; C2 : Where am i?\rClass09 --* C3\rClass09 --|\u0026gt; Class07\rClass07 : equals()\rClass07 : Object[] elementData\rClass01 : size()\rClass01 : int chimp\rClass01 : int gorilla\rclass Class10 {\r\u0026lt;\u0026lt;service\u0026gt;\u0026gt;\rint id\rsize()\r}\rstateDiagram\r[*] --\u0026gt; Still\rStill --\u0026gt; [*]\rStill --\u0026gt; Moving\rMoving --\u0026gt; Still\rMoving --\u0026gt; Crash\rCrash --\u0026gt; [*]\rpie\r\u0026quot;Dogs\u0026quot; : 386\r\u0026quot;Cats\u0026quot; : 85\r\u0026quot;Rats\u0026quot; : 15 ","description":"Generate diagrams, charts, graphs or flows from markdown-like text via javascript.","id":30,"section":"posts","tags":["diagram"],"title":"Mermaid support","uri":"https://ilyusha71.github.io/posts/test-mermaid/"},{"content":"When $a \\ne 0$, there are two solutions to $(ax^2 + bx + c = 0)$ and they are\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$\n","description":"A JavaScript display engine for mathematics that works in all browsers.No more setup for readers. It just works.","id":31,"section":"posts","tags":[""],"title":"MathJax support","uri":"https://ilyusha71.github.io/posts/test-mathjax/"},{"content":"The following\n$$ \\int_{a}^{b} x^2 dx $$\nIs an integral\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nEnable Katex in the config file by setting the katex param to true. This will import the necessary Katex CSS/JS.\nSee the online reference of supported TeX functions.\nNote: For inline math to render correctly, your content file extension must be .mmark. See the official mmark site.\nInline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $\rInline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $\nBlock math:\r$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\rBlock math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","description":"KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web.","id":32,"section":"posts","tags":[""],"title":"Katex support","uri":"https://ilyusha71.github.io/posts/test-katex/"},{"content":"st=\u0026gt;start: Start|past:\u0026gt;http://www.google.com[blank]\re=\u0026gt;end: End|future:\u0026gt;http://www.google.com\rop1=\u0026gt;operation: My Operation|past\rop2=\u0026gt;operation: Stuff|current\rsub1=\u0026gt;subroutine: My Subroutine|invalid\rcond=\u0026gt;condition: Yes\ror No?|approved:\u0026gt;http://www.google.com\rc2=\u0026gt;condition: Good idea|rejected\rio=\u0026gt;inputoutput: catch something...|future\rst-\u0026gt;op1(right)-\u0026gt;cond\rcond(yes, right)-\u0026gt;c2\rcond(no)-\u0026gt;sub1(left)-\u0026gt;op1\rc2(yes)-\u0026gt;io-\u0026gt;e\rc2(no)-\u0026gt;op2-\u0026gt;e\r","description":"flowchart.js is a flowchart DSL and SVG render that runs in the browser and terminal. Nodes and connections are defined in separately so that nodes can be reused and connections can be quickly changed.","id":33,"section":"posts","tags":[""],"title":"Flowchart support","uri":"https://ilyusha71.github.io/posts/test-flowchart/"},{"content":"Sample images from Pixabay\n","description":"cartoon gallery","id":34,"section":"gallery","tags":null,"title":"Cartoon","uri":"https://ilyusha71.github.io/gallery/cartoon/"},{"content":"Sample images from Pixabay\n","description":"photo gallery","id":35,"section":"gallery","tags":null,"title":"Photo","uri":"https://ilyusha71.github.io/gallery/photo/"},{"content":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\n https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","description":"Hugo, the world’s fastest framework for building websites","id":40,"section":"","tags":null,"title":"About","uri":"https://ilyusha71.github.io/about/"}]